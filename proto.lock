{
  "definitions": [
    {
      "protopath": "160-stress-tester:/:src:/:main:/:proto:/:io:/:harness:/:testing:/:stress_test.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateTaskStressTest",
            "fields": [
              {
                "id": 1,
                "name": "stage",
                "type": "DelegateTaskStressTestStage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DelegateTaskStressTestStage",
            "fields": [
              {
                "id": 1,
                "name": "task_request",
                "type": "delegate.SubmitTaskRequest",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "iterations",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "qps",
                "type": "int32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/delegate_service.proto"
          }
        ],
        "package": {
          "name": "io.harness.testing"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "400-rest:/:src:/:main:/:proto:/:log_analysis_record.proto",
      "def": {
        "messages": [
          {
            "name": "LogAnalysisMessageFrequency",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "old_label",
                "type": "string"
              },
              {
                "id": 3,
                "name": "host",
                "type": "string"
              },
              {
                "id": 4,
                "name": "time",
                "type": "int64"
              }
            ]
          },
          {
            "name": "LogAnalysisCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster_label",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "unexpected_freq",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "text",
                "type": "string"
              },
              {
                "id": 4,
                "name": "x",
                "type": "double"
              },
              {
                "id": 5,
                "name": "y",
                "type": "double"
              },
              {
                "id": 6,
                "name": "feedback_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "alert_score",
                "type": "double"
              },
              {
                "id": 8,
                "name": "test_score",
                "type": "double"
              },
              {
                "id": 9,
                "name": "control_score",
                "type": "double"
              },
              {
                "id": 10,
                "name": "freq_score",
                "type": "double"
              },
              {
                "id": 11,
                "name": "control_label",
                "type": "int32"
              },
              {
                "id": 12,
                "name": "risk_level",
                "type": "double",
                "options": [
                  {
                    "name": "default",
                    "value": "-1"
                  }
                ]
              },
              {
                "id": 13,
                "name": "priority",
                "type": "string"
              },
              {
                "id": 20,
                "name": "tags",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "anomalous_counts",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "diff_tags",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "message_frequencies",
                "type": "LogAnalysisMessageFrequency",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Pattern",
            "fields": [
              {
                "id": 1,
                "name": "sequence",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "timestamps",
                "type": "int64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FrequencyPattern",
            "fields": [
              {
                "id": 1,
                "name": "label",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              },
              {
                "id": 3,
                "name": "patterns",
                "type": "Pattern",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogAnalysisResult",
            "fields": [
              {
                "id": 1,
                "name": "label",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "tag",
                "type": "string"
              },
              {
                "id": 3,
                "name": "text",
                "type": "string"
              }
            ]
          },
          {
            "name": "LogAnalysisClusterList",
            "fields": [
              {
                "id": 1,
                "name": "analysis_clusters",
                "type": "LogAnalysisCluster",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogAnalysisClusterMap",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "analysis_clusters_map",
                  "type": "LogAnalysisCluster"
                }
              }
            ]
          },
          {
            "name": "LogMLAnalysisRecordDetails",
            "fields": [
              {
                "id": 1,
                "name": "unknown_events",
                "type": "LogAnalysisClusterList",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "test_events",
                  "type": "LogAnalysisClusterList"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "control_events",
                  "type": "LogAnalysisClusterList"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "control_clusters",
                  "type": "LogAnalysisClusterMap"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "unknown_clusters",
                  "type": "LogAnalysisClusterMap"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "test_clusters",
                  "type": "LogAnalysisClusterMap"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "ignore_clusters",
                  "type": "LogAnalysisClusterMap"
                }
              },
              {
                "key_type": "int32",
                "field": {
                  "id": 8,
                  "name": "frequency_patterns",
                  "type": "FrequencyPattern"
                }
              },
              {
                "key_type": "int32",
                "field": {
                  "id": 9,
                  "name": "log_analysis_result",
                  "type": "LogAnalysisResult"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "log.verification"
        },
        "options": [
          {
            "name": "java_package",
            "value": "software.wings.service.impl.verification.generated"
          },
          {
            "name": "java_outer_classname",
            "value": "LogMLAnalysisRecordProto"
          }
        ]
      }
    },
    {
      "protopath": "400-rest:/:src:/:main:/:proto:/:time_series_record.proto",
      "def": {
        "messages": [
          {
            "name": "MetricValues",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "metricValues",
                  "type": "double"
                }
              }
            ]
          },
          {
            "name": "MetricDeeplinks",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "metricDeeplinks",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TxnMetricValues",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "values",
                  "type": "MetricValues"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "deeplinkMetadata",
                  "type": "MetricDeeplinks"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "log.verification"
        },
        "options": [
          {
            "name": "java_package",
            "value": "software.wings.service.impl.verification.generated"
          },
          {
            "name": "java_outer_classname",
            "value": "TimeSeriesMetricRecordProto"
          }
        ]
      }
    },
    {
      "protopath": "867-polling-contracts:/:src:/:main:/:proto:/:io:/:harness:/:polling:/:contracts:/:polling_item.proto",
      "def": {
        "enums": [
          {
            "name": "Category",
            "enum_fields": [
              {
                "name": "ARTIFACT"
              },
              {
                "name": "MANIFEST",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "PollingItem",
            "fields": [
              {
                "id": 1,
                "name": "category",
                "type": "Category"
              },
              {
                "id": 2,
                "name": "qualifier",
                "type": "Qualifier"
              },
              {
                "id": 3,
                "name": "pollingPayloadData",
                "type": "io.harness.polling.contracts.PollingPayloadData"
              },
              {
                "id": 4,
                "name": "signature",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pollingDocId",
                "type": "string"
              }
            ]
          },
          {
            "name": "Qualifier",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "organizationId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "projectId",
                "type": "string"
              }
            ]
          },
          {
            "name": "PollingResponse",
            "fields": [
              {
                "id": 1,
                "name": "signatures",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pollingDocId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "io.harness.polling.contracts.Type"
              },
              {
                "id": 5,
                "name": "buildInfo",
                "type": "BuildInfo"
              }
            ]
          },
          {
            "name": "BuildInfo",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "versions",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/polling/contracts/polling_payload_data.proto"
          }
        ],
        "package": {
          "name": "io.harness.polling.contracts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "867-polling-contracts:/:src:/:main:/:proto:/:io:/:harness:/:polling:/:contracts:/:polling_payload_data.proto",
      "def": {
        "enums": [
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "HTTP_HELM",
                "integer": 1
              },
              {
                "name": "ECR",
                "integer": 2
              },
              {
                "name": "GCS_HELM",
                "integer": 3
              },
              {
                "name": "S3_HELM",
                "integer": 4
              },
              {
                "name": "DOCKER_HUB",
                "integer": 5
              },
              {
                "name": "GCR",
                "integer": 6
              },
              {
                "name": "NEXUS3",
                "integer": 7
              },
              {
                "name": "ARTIFACTORY",
                "integer": 8
              }
            ]
          },
          {
            "name": "HelmVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "PollingPayloadData",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "connectorRef",
                "type": "string"
              },
              {
                "id": 3,
                "name": "httpHelmPayload",
                "type": "HttpHelmPayload"
              },
              {
                "id": 4,
                "name": "ecrPayload",
                "type": "EcrPayload"
              },
              {
                "id": 5,
                "name": "gcsHelmPayload",
                "type": "GcsHelmPayload"
              },
              {
                "id": 6,
                "name": "s3HelmPayload",
                "type": "S3HelmPayload"
              },
              {
                "id": 7,
                "name": "dockerHubPayload",
                "type": "DockerHubPayload"
              },
              {
                "id": 8,
                "name": "gcrPayload",
                "type": "GcrPayload"
              },
              {
                "id": 9,
                "name": "nexus3RegistryPayload",
                "type": "Nexus3RegistryPayload"
              },
              {
                "id": 10,
                "name": "artifactoryRegistryPayload",
                "type": "ArtifactoryRegistryPayload"
              }
            ]
          },
          {
            "name": "HttpHelmPayload",
            "fields": [
              {
                "id": 1,
                "name": "chartName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "helmVersion",
                "type": "HelmVersion"
              }
            ]
          },
          {
            "name": "EcrPayload",
            "fields": [
              {
                "id": 1,
                "name": "imagePath",
                "type": "string"
              },
              {
                "id": 2,
                "name": "region",
                "type": "string"
              }
            ]
          },
          {
            "name": "GcsHelmPayload",
            "fields": [
              {
                "id": 1,
                "name": "chartName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "bucketName",
                "type": "string"
              },
              {
                "id": 3,
                "name": "helmVersion",
                "type": "HelmVersion"
              },
              {
                "id": 5,
                "name": "folderPath",
                "type": "string"
              }
            ]
          },
          {
            "name": "S3HelmPayload",
            "fields": [
              {
                "id": 1,
                "name": "chartName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "bucketName",
                "type": "string"
              },
              {
                "id": 3,
                "name": "region",
                "type": "string"
              },
              {
                "id": 4,
                "name": "helmVersion",
                "type": "HelmVersion"
              },
              {
                "id": 5,
                "name": "folderPath",
                "type": "string"
              }
            ]
          },
          {
            "name": "DockerHubPayload",
            "fields": [
              {
                "id": 1,
                "name": "imagePath",
                "type": "string"
              }
            ]
          },
          {
            "name": "GcrPayload",
            "fields": [
              {
                "id": 1,
                "name": "imagePath",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registryHostname",
                "type": "string"
              }
            ]
          },
          {
            "name": "Nexus3RegistryPayload",
            "fields": [
              {
                "id": 1,
                "name": "repository",
                "type": "string"
              },
              {
                "id": 2,
                "name": "artifactPath",
                "type": "string"
              },
              {
                "id": 3,
                "name": "format",
                "type": "string"
              }
            ]
          },
          {
            "name": "ArtifactoryRegistryPayload",
            "fields": [
              {
                "id": 1,
                "name": "artifactPath",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.polling.contracts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "867-polling-contracts:/:src:/:main:/:proto:/:io:/:harness:/:polling:/:contracts:/:service:/:polling_framework_service.proto",
      "def": {
        "messages": [
          {
            "name": "PollingDocument",
            "fields": [
              {
                "id": 1,
                "name": "pollingDocId",
                "type": "string"
              }
            ]
          },
          {
            "name": "PollingResponse",
            "fields": [
              {
                "id": 1,
                "name": "subscriptionStatus",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PollingFrameworkService",
            "rpcs": [
              {
                "name": "subscribe",
                "in_type": "io.harness.polling.contracts.PollingItem",
                "out_type": "PollingDocument"
              },
              {
                "name": "unsubscribe",
                "in_type": "io.harness.polling.contracts.PollingItem",
                "out_type": "PollingResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/polling/contracts/polling_item.proto"
          }
        ],
        "package": {
          "name": "io.harness.polling.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:advisers:/:advise.proto",
      "def": {
        "enums": [
          {
            "name": "AdviseType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NEXT_STEP",
                "integer": 1
              },
              {
                "name": "RETRY",
                "integer": 2
              },
              {
                "name": "INTERVENTION_WAIT",
                "integer": 3
              },
              {
                "name": "END_PLAN",
                "integer": 4
              },
              {
                "name": "MARK_SUCCESS",
                "integer": 5
              },
              {
                "name": "IGNORE_FAILURE",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AdviserResponse",
            "fields": [
              {
                "id": 1,
                "name": "nextStepAdvise",
                "type": "NextStepAdvise"
              },
              {
                "id": 2,
                "name": "retryAdvise",
                "type": "RetryAdvise"
              },
              {
                "id": 3,
                "name": "interventionWaitAdvise",
                "type": "InterventionWaitAdvise"
              },
              {
                "id": 4,
                "name": "endPlanAdvise",
                "type": "EndPlanAdvise"
              },
              {
                "id": 6,
                "name": "markSuccessAdvise",
                "type": "MarkSuccessAdvise"
              },
              {
                "id": 8,
                "name": "ignoreFailureAdvise",
                "type": "IgnoreFailureAdvise"
              },
              {
                "id": 5,
                "name": "type",
                "type": "AdviseType"
              },
              {
                "id": 7,
                "name": "repairActionCode",
                "type": "io.harness.pms.contracts.commons.RepairActionCode"
              }
            ]
          },
          {
            "name": "NextStepAdvise",
            "fields": [
              {
                "id": 2,
                "name": "nextNodeId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "toStatus",
                "type": "io.harness.pms.contracts.execution.Status"
              }
            ]
          },
          {
            "name": "RetryAdvise",
            "fields": [
              {
                "id": 1,
                "name": "retryNodeExecutionId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "waitInterval",
                "type": "int64"
              }
            ]
          },
          {
            "name": "InterventionWaitAdvise",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 2,
                "name": "repairActionCode",
                "type": "io.harness.pms.contracts.commons.RepairActionCode"
              },
              {
                "id": 4,
                "name": "fromStatus",
                "type": "io.harness.pms.contracts.execution.Status"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "EndPlanAdvise",
            "fields": [
              {
                "id": 1,
                "name": "isAbort",
                "type": "bool"
              }
            ]
          },
          {
            "name": "MarkSuccessAdvise",
            "fields": [
              {
                "id": 1,
                "name": "nextNodeId",
                "type": "string"
              }
            ]
          },
          {
            "name": "IgnoreFailureAdvise"
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "io/harness/pms/contracts/commons/repair_action_code.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.advisers"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:advisers:/:advise_event.proto",
      "def": {
        "messages": [
          {
            "name": "AdviseEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "failureInfo",
                "type": "io.harness.pms.contracts.execution.failure.FailureInfo"
              },
              {
                "id": 3,
                "name": "adviserObtainments",
                "type": "AdviserObtainment",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "isPreviousAdviserExpired",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "retryIds",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 7,
                "name": "fromStatus",
                "type": "io.harness.pms.contracts.execution.Status"
              },
              {
                "id": 8,
                "name": "toStatus",
                "type": "io.harness.pms.contracts.execution.Status"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/advisers/advisers.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/failure/failure_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.advisers"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:advisers:/:advisers.proto",
      "def": {
        "messages": [
          {
            "name": "AdviserObtainment",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "AdviserType"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "AdviserType",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.advisers"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:ambiance:/:ambiance.proto",
      "def": {
        "messages": [
          {
            "name": "Ambiance",
            "fields": [
              {
                "id": 2,
                "name": "levels",
                "type": "io.harness.pms.contracts.ambiance.Level",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "planExecutionId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "metadata",
                "type": "io.harness.pms.contracts.plan.ExecutionMetadata"
              },
              {
                "id": 5,
                "name": "expressionFunctorToken",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "planId",
                "type": "string"
              },
              {
                "id": 7,
                "name": "startTs",
                "type": "int64"
              },
              {
                "id": 8,
                "name": "stageExecutionId",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "setupAbstractions",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/level.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/execution_metadata.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.ambiance"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:ambiance:/:level.proto",
      "def": {
        "messages": [
          {
            "name": "Level",
            "fields": [
              {
                "id": 1,
                "name": "setupId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "runtimeId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 4,
                "name": "stepType",
                "type": "io.harness.pms.contracts.steps.StepType"
              },
              {
                "id": 5,
                "name": "group",
                "type": "string"
              },
              {
                "id": 6,
                "name": "retryIndex",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "skipExpressionChain",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "startTs",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "nodeType",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/steps/step_type.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.ambiance"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:commons:/:repair_action_code.proto",
      "def": {
        "enums": [
          {
            "name": "RepairActionCode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "RETRY",
                "integer": 1
              },
              {
                "name": "MANUAL_INTERVENTION",
                "integer": 2
              },
              {
                "name": "IGNORE",
                "integer": 3
              },
              {
                "name": "END_EXECUTION",
                "integer": 4
              },
              {
                "name": "MARK_AS_SUCCESS",
                "integer": 5
              },
              {
                "name": "ON_FAIL",
                "integer": 6
              },
              {
                "name": "STAGE_ROLLBACK",
                "integer": 7
              },
              {
                "name": "STEP_GROUP_ROLLBACK",
                "integer": 8
              },
              {
                "name": "CUSTOM_FAILURE",
                "integer": 9
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.commons"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:data:/:step_outcome_ref.proto",
      "def": {
        "messages": [
          {
            "name": "StepOutcomeRef",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instanceId",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.data"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:events:/:initiate_node_event.proto",
      "def": {
        "messages": [
          {
            "name": "InitiateNodeEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "nodeId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "runtimeId",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.events"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:events:/:orchestration_event.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestrationEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "eventType",
                "type": "OrchestrationEventType"
              },
              {
                "id": 5,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "status",
                "type": "io.harness.pms.contracts.execution.Status"
              },
              {
                "id": 7,
                "name": "serviceName",
                "type": "string"
              },
              {
                "id": 8,
                "name": "triggerPayload",
                "type": "triggers.TriggerPayload"
              },
              {
                "id": 9,
                "name": "tags",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "moduleInfo",
                "type": "bytes"
              },
              {
                "id": 11,
                "name": "endTs",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/events/orchestration_event_type.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          },
          {
            "path": "io/harness/pms/contracts/triggers/trigger_payload.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.events"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:events:/:orchestration_event_type.proto",
      "def": {
        "enums": [
          {
            "name": "OrchestrationEventType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "ORCHESTRATION_START",
                "integer": 1
              },
              {
                "name": "ORCHESTRATION_END",
                "integer": 2
              },
              {
                "name": "NODE_EXECUTION_STATUS_UPDATE",
                "integer": 3
              },
              {
                "name": "INTERVENTION_WAIT_START",
                "integer": 4
              },
              {
                "name": "PLAN_EXECUTION_STATUS_UPDATE",
                "integer": 5
              },
              {
                "name": "PLAN_EXECUTION_SUCCESS",
                "integer": 6
              },
              {
                "name": "PLAN_EXECUTION_FAILED",
                "integer": 7
              },
              {
                "name": "PLAN_EXECUTION_PAUSED",
                "integer": 8
              },
              {
                "name": "NODE_EXECUTION_START",
                "integer": 9
              },
              {
                "name": "NODE_EXECUTION_UPDATE",
                "integer": 10
              },
              {
                "name": "STEP_DETAILS_UPDATE",
                "integer": 11
              },
              {
                "name": "STEP_INPUTS_UPDATE",
                "integer": 12
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.events"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:events:/:sdk_response_event.proto",
      "def": {
        "enums": [
          {
            "name": "SdkResponseEventType",
            "enum_fields": [
              {
                "name": "UNKNOWN_EVENT_TYPE"
              },
              {
                "name": "ADD_EXECUTABLE_RESPONSE",
                "integer": 2
              },
              {
                "name": "HANDLE_STEP_RESPONSE",
                "integer": 3
              },
              {
                "name": "RESUME_NODE_EXECUTION",
                "integer": 4
              },
              {
                "name": "HANDLE_FACILITATE_RESPONSE",
                "integer": 5
              },
              {
                "name": "HANDLE_EVENT_ERROR",
                "integer": 6
              },
              {
                "name": "HANDLE_ADVISER_RESPONSE",
                "integer": 7
              },
              {
                "name": "SUSPEND_CHAIN",
                "integer": 9
              },
              {
                "name": "SPAWN_CHILD",
                "integer": 10
              },
              {
                "name": "QUEUE_TASK",
                "integer": 11
              },
              {
                "name": "SPAWN_CHILDREN",
                "integer": 12
              },
              {
                "name": "HANDLE_PROGRESS",
                "integer": 13
              },
              {
                "name": "ADD_STEP_DETAILS_INSTANCE_REQUEST",
                "integer": 14
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SdkResponseEventProto",
            "fields": [
              {
                "id": 1,
                "name": "sdkResponseEventType",
                "type": "SdkResponseEventType"
              },
              {
                "id": 3,
                "name": "createdAt",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "queueTaskRequest",
                "type": "QueueTaskRequest"
              },
              {
                "id": 7,
                "name": "addExecutableResponseRequest",
                "type": "AddExecutableResponseRequest"
              },
              {
                "id": 8,
                "name": "handleStepResponseRequest",
                "type": "HandleStepResponseRequest"
              },
              {
                "id": 9,
                "name": "resumeNodeExecutionRequest",
                "type": "ResumeNodeExecutionRequest"
              },
              {
                "id": 10,
                "name": "facilitatorResponseRequest",
                "type": "FacilitatorResponseRequest"
              },
              {
                "id": 11,
                "name": "eventErrorRequest",
                "type": "EventErrorRequest"
              },
              {
                "id": 12,
                "name": "adviserResponseRequest",
                "type": "AdviserResponseRequest"
              },
              {
                "id": 13,
                "name": "suspendChainRequest",
                "type": "SuspendChainRequest"
              },
              {
                "id": 14,
                "name": "spawnChildRequest",
                "type": "SpawnChildRequest"
              },
              {
                "id": 15,
                "name": "spawnChildrenRequest",
                "type": "SpawnChildrenRequest"
              },
              {
                "id": 16,
                "name": "progressRequest",
                "type": "HandleProgressRequest"
              },
              {
                "id": 17,
                "name": "stepDetailsInstanceRequest",
                "type": "AddStepDetailsInstanceRequest"
              },
              {
                "id": 18,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              }
            ]
          },
          {
            "name": "FacilitatorResponseRequest",
            "fields": [
              {
                "id": 2,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "facilitatorResponse",
                "type": "io.harness.pms.contracts.facilitators.FacilitatorResponseProto"
              }
            ]
          },
          {
            "name": "AddExecutableResponseRequest",
            "fields": [
              {
                "id": 3,
                "name": "executableResponse",
                "type": "io.harness.pms.contracts.execution.ExecutableResponse"
              }
            ]
          },
          {
            "name": "HandleStepResponseRequest",
            "fields": [
              {
                "id": 2,
                "name": "stepResponse",
                "type": "steps.io.StepResponseProto"
              },
              {
                "id": 3,
                "name": "executableResponse",
                "type": "io.harness.pms.contracts.execution.ExecutableResponse"
              }
            ]
          },
          {
            "name": "ResumeNodeExecutionRequest",
            "fields": [
              {
                "id": 3,
                "name": "asyncError",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "response",
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "name": "EventErrorRequest",
            "fields": [
              {
                "id": 1,
                "name": "eventType",
                "type": "io.harness.pms.contracts.plan.NodeExecutionEventType"
              },
              {
                "id": 2,
                "name": "eventNotifyId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "failureInfo",
                "type": "execution.failure.FailureInfo"
              }
            ]
          },
          {
            "name": "AdviserResponseRequest",
            "fields": [
              {
                "id": 2,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "adviserResponse",
                "type": "io.harness.pms.contracts.advisers.AdviserResponse"
              }
            ]
          },
          {
            "name": "SuspendChainRequest",
            "fields": [
              {
                "id": 2,
                "name": "executableResponse",
                "type": "io.harness.pms.contracts.execution.ExecutableResponse"
              },
              {
                "id": 4,
                "name": "isError",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "response",
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "name": "SpawnChildRequest",
            "fields": [
              {
                "id": 3,
                "name": "child",
                "type": "io.harness.pms.contracts.execution.ChildExecutableResponse"
              },
              {
                "id": 4,
                "name": "childChain",
                "type": "io.harness.pms.contracts.execution.ChildChainExecutableResponse"
              }
            ]
          },
          {
            "name": "SpawnChildrenRequest",
            "fields": [
              {
                "id": 3,
                "name": "children",
                "type": "io.harness.pms.contracts.execution.ChildrenExecutableResponse"
              }
            ]
          },
          {
            "name": "QueueTaskRequest",
            "fields": [
              {
                "id": 2,
                "name": "executableResponse",
                "type": "io.harness.pms.contracts.execution.ExecutableResponse"
              },
              {
                "id": 3,
                "name": "status",
                "type": "io.harness.pms.contracts.execution.Status"
              },
              {
                "id": 5,
                "name": "taskRequest",
                "type": "io.harness.pms.contracts.execution.tasks.TaskRequest"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "setupAbstractions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "AddStepDetailsInstanceRequest",
            "fields": [
              {
                "id": 1,
                "name": "stepDetails",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nodeExecutionId",
                "type": "string"
              }
            ]
          },
          {
            "name": "HandleProgressRequest",
            "fields": [
              {
                "id": 3,
                "name": "progressJson",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/execution/tasks/task_request.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/executable_response.proto"
          },
          {
            "path": "io/harness/pms/contracts/steps/io/step_response_proto.proto"
          },
          {
            "path": "io/harness/pms/contracts/facilitators/facilitators.proto"
          },
          {
            "path": "io/harness/pms/contracts/service/node_execution_event.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/failure/failure_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/advisers/advise.proto"
          },
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.events"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:executable_response.proto",
      "def": {
        "messages": [
          {
            "name": "ExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "async",
                "type": "AsyncExecutableResponse"
              },
              {
                "id": 2,
                "name": "child",
                "type": "ChildExecutableResponse"
              },
              {
                "id": 3,
                "name": "children",
                "type": "ChildrenExecutableResponse"
              },
              {
                "id": 4,
                "name": "childChain",
                "type": "ChildChainExecutableResponse"
              },
              {
                "id": 5,
                "name": "task",
                "type": "TaskExecutableResponse"
              },
              {
                "id": 6,
                "name": "taskChain",
                "type": "TaskChainExecutableResponse"
              },
              {
                "id": 7,
                "name": "sync",
                "type": "SyncExecutableResponse"
              },
              {
                "id": 8,
                "name": "skipTask",
                "type": "SkipTaskExecutableResponse"
              }
            ]
          },
          {
            "name": "SyncExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "units",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AsyncExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "callbackIds",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "units",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ChildExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "childNodeId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "units",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ChildrenExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "children",
                "type": "Child",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Child",
                "fields": [
                  {
                    "id": 1,
                    "name": "childNodeId",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ChildChainExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "nextChildId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "previousChildId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "passThroughData",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "lastLink",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "suspend",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TaskChainExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "taskId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "taskCategory",
                "type": "io.harness.pms.contracts.execution.tasks.TaskCategory"
              },
              {
                "id": 3,
                "name": "chainEnd",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "passThroughData",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "units",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "taskName",
                "type": "string"
              }
            ]
          },
          {
            "name": "TaskExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "taskId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "taskCategory",
                "type": "io.harness.pms.contracts.execution.tasks.TaskCategory"
              },
              {
                "id": 3,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "units",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "taskName",
                "type": "string"
              }
            ]
          },
          {
            "name": "SkipTaskExecutableResponse",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/execution/tasks/task_request.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:execution_error_info.proto",
      "def": {
        "messages": [
          {
            "name": "ExecutionErrorInfo",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:execution_mode.proto",
      "def": {
        "enums": [
          {
            "name": "ExecutionMode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SYNC",
                "integer": 1
              },
              {
                "name": "ASYNC",
                "integer": 2
              },
              {
                "name": "TASK_CHAIN",
                "integer": 3
              },
              {
                "name": "TASK",
                "integer": 4
              },
              {
                "name": "CHILD_CHAIN",
                "integer": 5
              },
              {
                "name": "CHILDREN",
                "integer": 6
              },
              {
                "name": "CHILD",
                "integer": 7
              },
              {
                "name": "SKIP",
                "integer": 8
              },
              {
                "name": "APPROVAL",
                "integer": 9
              },
              {
                "name": "CONSTRAINT",
                "integer": 10
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:failure:/:failure_info.proto",
      "def": {
        "messages": [
          {
            "name": "FailureInfo",
            "fields": [
              {
                "id": 1,
                "name": "errorMessage",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "failureTypes",
                "type": "FailureType",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "failureData",
                "type": "FailureData",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FailureData",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "string"
              },
              {
                "id": 2,
                "name": "level",
                "type": "string"
              },
              {
                "id": 3,
                "name": "message",
                "type": "string"
              },
              {
                "id": 4,
                "name": "failureTypes",
                "type": "FailureType",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/execution/failure/failure_type.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.failure"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:failure:/:failure_type.proto",
      "def": {
        "enums": [
          {
            "name": "FailureType",
            "enum_fields": [
              {
                "name": "UNKNOWN_FAILURE"
              },
              {
                "name": "DELEGATE_PROVISIONING_FAILURE",
                "integer": 1
              },
              {
                "name": "CONNECTIVITY_FAILURE",
                "integer": 2
              },
              {
                "name": "AUTHENTICATION_FAILURE",
                "integer": 3
              },
              {
                "name": "VERIFICATION_FAILURE",
                "integer": 4
              },
              {
                "name": "APPLICATION_FAILURE",
                "integer": 5
              },
              {
                "name": "AUTHORIZATION_FAILURE",
                "integer": 6
              },
              {
                "name": "TIMEOUT_FAILURE",
                "integer": 7
              },
              {
                "name": "SKIPPING_FAILURE",
                "integer": 8
              },
              {
                "name": "POLICY_EVALUATION_FAILURE",
                "integer": 9
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.failure"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:node_execution_proto.proto",
      "def": {
        "messages": [
          {
            "name": "NodeExecutionProto",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 3,
                "name": "node",
                "type": "io.harness.pms.contracts.plan.PlanNodeProto"
              },
              {
                "id": 4,
                "name": "mode",
                "type": "ExecutionMode"
              },
              {
                "id": 5,
                "name": "startTs",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "endTs",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "initialWaitDuration",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 8,
                "name": "resolvedStepParameters",
                "type": "string"
              },
              {
                "id": 21,
                "name": "resolvedStepInputs",
                "type": "string"
              },
              {
                "id": 9,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 10,
                "name": "parentId",
                "type": "string"
              },
              {
                "id": 11,
                "name": "nextId",
                "type": "string"
              },
              {
                "id": 12,
                "name": "previousId",
                "type": "string"
              },
              {
                "id": 13,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 14,
                "name": "executableResponses",
                "type": "io.harness.pms.contracts.execution.ExecutableResponse",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "outcomeRefs",
                "type": "io.harness.pms.contracts.data.StepOutcomeRef",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "failureInfo",
                "type": "io.harness.pms.contracts.execution.failure.FailureInfo"
              },
              {
                "id": 17,
                "name": "skipInfo",
                "type": "io.harness.pms.contracts.execution.skip.SkipInfo"
              },
              {
                "id": 18,
                "name": "retryIds",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "oldRetry",
                "type": "bool"
              },
              {
                "id": 20,
                "name": "adviserResponse",
                "type": "io.harness.pms.contracts.advisers.AdviserResponse"
              },
              {
                "id": 23,
                "name": "interruptHistories",
                "type": "io.harness.pms.contracts.interrupts.InterruptEffectProto",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "io/harness/pms/contracts/advisers/advise.proto"
          },
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/plan_node_proto.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/execution_mode.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/executable_response.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/failure/failure_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/skip/skip_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          },
          {
            "path": "io/harness/pms/contracts/data/step_outcome_ref.proto"
          },
          {
            "path": "io/harness/pms/contracts/interrupts/interrupt_effect_proto.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:run:/:node_run_info.proto",
      "def": {
        "messages": [
          {
            "name": "NodeRunInfo",
            "fields": [
              {
                "id": 1,
                "name": "whenCondition",
                "type": "string"
              },
              {
                "id": 2,
                "name": "evaluatedCondition",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "expressions",
                "type": "ExpressionBlock",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExpressionBlock",
            "fields": [
              {
                "id": 1,
                "name": "expression",
                "type": "string"
              },
              {
                "id": 2,
                "name": "expressionValue",
                "type": "string"
              },
              {
                "id": 3,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.run"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:skip:/:skip_info.proto",
      "def": {
        "messages": [
          {
            "name": "SkipInfo",
            "fields": [
              {
                "id": 1,
                "name": "skipCondition",
                "type": "string"
              },
              {
                "id": 2,
                "name": "evaluatedCondition",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.skip"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:start:/:node_start_event.proto",
      "def": {
        "messages": [
          {
            "name": "NodeStartEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "refObjects",
                "type": "io.harness.pms.contracts.refobjects.RefObject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "facilitatorPassThoroughData",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "mode",
                "type": "io.harness.pms.contracts.execution.ExecutionMode"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/execution_mode.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.start"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:start:/:orchestration_log_event.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestrationLogEvent",
            "fields": [
              {
                "id": 1,
                "name": "planExecutionId",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.visualisation.log"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:status.proto",
      "def": {
        "enums": [
          {
            "name": "Status",
            "enum_fields": [
              {
                "name": "NO_OP"
              },
              {
                "name": "RUNNING",
                "integer": 1
              },
              {
                "name": "INTERVENTION_WAITING",
                "integer": 2
              },
              {
                "name": "TIMED_WAITING",
                "integer": 3
              },
              {
                "name": "ASYNC_WAITING",
                "integer": 4
              },
              {
                "name": "TASK_WAITING",
                "integer": 5
              },
              {
                "name": "DISCONTINUING",
                "integer": 6
              },
              {
                "name": "PAUSING",
                "integer": 7
              },
              {
                "name": "QUEUED",
                "integer": 8
              },
              {
                "name": "SKIPPED",
                "integer": 9
              },
              {
                "name": "PAUSED",
                "integer": 10
              },
              {
                "name": "ABORTED",
                "integer": 11
              },
              {
                "name": "ERRORED",
                "integer": 12
              },
              {
                "name": "FAILED",
                "integer": 13
              },
              {
                "name": "EXPIRED",
                "integer": 14
              },
              {
                "name": "SUSPENDED",
                "integer": 15
              },
              {
                "name": "SUCCEEDED",
                "integer": 16
              },
              {
                "name": "IGNORE_FAILED",
                "integer": 17
              },
              {
                "name": "APPROVAL_WAITING",
                "integer": 18
              },
              {
                "name": "RESOURCE_WAITING",
                "integer": 19
              },
              {
                "name": "APPROVAL_REJECTED",
                "integer": 20
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:tasks:/:delegate_task_request.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateTaskRequest",
            "fields": [
              {
                "id": 7,
                "name": "units",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "logKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "taskName",
                "type": "string"
              },
              {
                "id": 12,
                "name": "request",
                "type": "io.harness.delegate.SubmitTaskRequest"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/delegate_service.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.tasks"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:tasks:/:skip_task_request.proto",
      "def": {
        "messages": [
          {
            "name": "SkipTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.tasks"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:execution:/:tasks:/:task_request.proto",
      "def": {
        "enums": [
          {
            "name": "TaskCategory",
            "enum_fields": [
              {
                "name": "UNKNOWN_CATEGORY"
              },
              {
                "name": "DELEGATE_TASK_V1",
                "integer": 1
              },
              {
                "name": "DELEGATE_TASK_V2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "delegateTaskRequest",
                "type": "DelegateTaskRequest"
              },
              {
                "id": 3,
                "name": "skipTaskRequest",
                "type": "SkipTaskRequest"
              },
              {
                "id": 2,
                "name": "taskCategory",
                "type": "TaskCategory"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/execution/tasks/delegate_task_request.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/tasks/skip_task_request.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.execution.tasks"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:expression:/:expression_execution_service.proto",
      "def": {
        "messages": [
          {
            "name": "ExpressionRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "functorKey",
                "type": "string"
              },
              {
                "id": 3,
                "name": "args",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExpressionResponse",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "errorResponse",
                "type": "ErrorResponse"
              },
              {
                "id": 3,
                "name": "isPrimitive",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "primitiveType",
                "type": "string"
              }
            ]
          },
          {
            "name": "ErrorResponse",
            "fields": [
              {
                "id": 1,
                "name": "messages",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RemoteFunctorService",
            "rpcs": [
              {
                "name": "evaluate",
                "in_type": "ExpressionRequest",
                "out_type": "ExpressionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.expression"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:facilitators:/:facilitator_event.proto",
      "def": {
        "messages": [
          {
            "name": "FacilitatorEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "refObjects",
                "type": "io.harness.pms.contracts.refobjects.RefObject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "stepType",
                "type": "io.harness.pms.contracts.steps.StepType"
              },
              {
                "id": 4,
                "name": "facilitatorObtainments",
                "type": "FacilitatorObtainment",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "nodeExecutionId",
                "type": "string"
              },
              {
                "id": 7,
                "name": "notifyId",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/steps/step_type.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          },
          {
            "path": "io/harness/pms/contracts/facilitators/facilitators.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.facilitators"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:facilitators:/:facilitators.proto",
      "def": {
        "messages": [
          {
            "name": "FacilitatorObtainment",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "FacilitatorType"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "FacilitatorType",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "FacilitatorResponseProto",
            "fields": [
              {
                "id": 1,
                "name": "initialWait",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 2,
                "name": "executionMode",
                "type": "execution.ExecutionMode"
              },
              {
                "id": 3,
                "name": "passThroughData",
                "type": "string"
              },
              {
                "id": 4,
                "name": "isSuccessful",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/execution_mode.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.facilitators"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:governance:/:governance_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyMetadata",
            "fields": [
              {
                "id": 1,
                "name": "policyId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policyName",
                "type": "string"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "string"
              },
              {
                "id": 4,
                "name": "denyMessages",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "status",
                "type": "string"
              },
              {
                "id": 6,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 7,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 8,
                "name": "orgId",
                "type": "string"
              },
              {
                "id": 9,
                "name": "projectId",
                "type": "string"
              },
              {
                "id": 10,
                "name": "created",
                "type": "int64"
              },
              {
                "id": 11,
                "name": "updated",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicySetMetadata",
            "fields": [
              {
                "id": 1,
                "name": "policySetId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deny",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "policyMetadata",
                "type": "PolicyMetadata",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policySetName",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "string"
              },
              {
                "id": 6,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 7,
                "name": "created",
                "type": "int64"
              },
              {
                "id": 8,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 9,
                "name": "orgId",
                "type": "string"
              },
              {
                "id": 10,
                "name": "projectId",
                "type": "string"
              }
            ]
          },
          {
            "name": "GovernanceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deny",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "details",
                "type": "PolicySetMetadata",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "timestamp",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "status",
                "type": "string"
              },
              {
                "id": 7,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 8,
                "name": "orgId",
                "type": "string"
              },
              {
                "id": 9,
                "name": "projectId",
                "type": "string"
              },
              {
                "id": 10,
                "name": "entity",
                "type": "string"
              },
              {
                "id": 11,
                "name": "type",
                "type": "string"
              },
              {
                "id": 12,
                "name": "action",
                "type": "string"
              },
              {
                "id": 13,
                "name": "created",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.governance"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:governance:/:json_expansion_service.proto",
      "def": {
        "enums": [
          {
            "name": "ExpansionPlacementStrategy",
            "enum_fields": [
              {
                "name": "REPLACE"
              },
              {
                "name": "PARALLEL",
                "integer": 1
              },
              {
                "name": "MOVE_UP",
                "integer": 2
              },
              {
                "name": "APPEND",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ExpansionRequestBatch",
            "fields": [
              {
                "id": 1,
                "name": "expansionRequestProto",
                "type": "ExpansionRequestProto",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "requestMetadata",
                "type": "ExpansionRequestMetadata"
              }
            ]
          },
          {
            "name": "ExpansionRequestProto",
            "fields": [
              {
                "id": 1,
                "name": "fqn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "key",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExpansionResponseBatch",
            "fields": [
              {
                "id": 1,
                "name": "expansionResponseProto",
                "type": "ExpansionResponseProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExpansionResponseProto",
            "fields": [
              {
                "id": 1,
                "name": "fqn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "placement",
                "type": "ExpansionPlacementStrategy"
              },
              {
                "id": 5,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "errorMessage",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExpansionRequestMetadata",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "projectId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "orgId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "gitSyncBranchContext",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "JsonExpansionService",
            "rpcs": [
              {
                "name": "expand",
                "in_type": "ExpansionRequestBatch",
                "out_type": "ExpansionResponseBatch"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.governance"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:interrupts:/:interrupt_config.proto",
      "def": {
        "messages": [
          {
            "name": "InterruptConfig",
            "fields": [
              {
                "id": 1,
                "name": "issuedBy",
                "type": "IssuedBy"
              },
              {
                "id": 3,
                "name": "retryInterruptConfig",
                "type": "RetryInterruptConfig"
              }
            ]
          },
          {
            "name": "RetryInterruptConfig",
            "fields": [
              {
                "id": 1,
                "name": "retryId",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssuedBy",
            "fields": [
              {
                "id": 2,
                "name": "issueTime",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "manualIssuer",
                "type": "ManualIssuer"
              },
              {
                "id": 4,
                "name": "adviserIssuer",
                "type": "AdviserIssuer"
              },
              {
                "id": 5,
                "name": "timeoutIssuer",
                "type": "TimeoutIssuer"
              },
              {
                "id": 6,
                "name": "triggerIssuer",
                "type": "TriggerIssuer"
              }
            ]
          },
          {
            "name": "ManualIssuer",
            "fields": [
              {
                "id": 1,
                "name": "email_id",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "user_id",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "identifier",
                "type": "string"
              }
            ]
          },
          {
            "name": "AdviserIssuer",
            "fields": [
              {
                "id": 1,
                "name": "adviserType",
                "type": "io.harness.pms.contracts.advisers.AdviseType"
              }
            ]
          },
          {
            "name": "TimeoutIssuer",
            "fields": [
              {
                "id": 1,
                "name": "timeoutInstanceId",
                "type": "string"
              }
            ]
          },
          {
            "name": "TriggerIssuer",
            "fields": [
              {
                "id": 1,
                "name": "triggerRef",
                "type": "string"
              },
              {
                "id": 2,
                "name": "abortPrevConcurrentExecution",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "io/harness/pms/contracts/advisers/advise.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.interrupts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:interrupts:/:interrupt_effect_proto.proto",
      "def": {
        "messages": [
          {
            "name": "InterruptEffectProto",
            "fields": [
              {
                "id": 1,
                "name": "interruptId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "tookEffectAt",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "interruptType",
                "type": "interrupts.InterruptType"
              },
              {
                "id": 4,
                "name": "interruptConfig",
                "type": "InterruptConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "io/harness/pms/contracts/interrupts/interrupt_config.proto"
          },
          {
            "path": "io/harness/pms/contracts/interrupts/interrupt_type.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.interrupts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:interrupts:/:interrupt_event.proto",
      "def": {
        "messages": [
          {
            "name": "InterruptEvent",
            "fields": [
              {
                "id": 1,
                "name": "interruptUuid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "InterruptType"
              },
              {
                "id": 5,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 6,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 7,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "async",
                "type": "io.harness.pms.contracts.execution.AsyncExecutableResponse"
              },
              {
                "id": 9,
                "name": "task",
                "type": "io.harness.pms.contracts.execution.TaskExecutableResponse"
              },
              {
                "id": 10,
                "name": "taskChain",
                "type": "io.harness.pms.contracts.execution.TaskChainExecutableResponse"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/interrupts/interrupt_type.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/executable_response.proto"
          },
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.interrupts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:interrupts:/:interrupt_type.proto",
      "def": {
        "enums": [
          {
            "name": "InterruptType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "ABORT",
                "integer": 1
              },
              {
                "name": "ABORT_ALL",
                "integer": 2
              },
              {
                "name": "PAUSE",
                "integer": 3
              },
              {
                "name": "PAUSE_ALL",
                "integer": 5
              },
              {
                "name": "RESUME",
                "integer": 6
              },
              {
                "name": "RESUME_ALL",
                "integer": 7
              },
              {
                "name": "RETRY",
                "integer": 8
              },
              {
                "name": "IGNORE",
                "integer": 9
              },
              {
                "name": "WAITING_FOR_MANUAL_INTERVENTION",
                "integer": 10
              },
              {
                "name": "MARK_FAILED",
                "integer": 11
              },
              {
                "name": "MARK_SUCCESS",
                "integer": 12
              },
              {
                "name": "NEXT_STEP",
                "integer": 14
              },
              {
                "name": "END_EXECUTION",
                "integer": 15
              },
              {
                "name": "MARK_EXPIRED",
                "integer": 17
              },
              {
                "name": "CUSTOM_FAILURE",
                "integer": 18
              },
              {
                "name": "EXPIRE_ALL",
                "integer": 19
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.interrupts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:async_creator_service.proto",
      "def": {
        "enums": [
          {
            "name": "AsyncCreatorType",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "PLAN_CREATION",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CreatePartialPlanEvent",
            "fields": [
              {
                "id": 3,
                "name": "type",
                "type": "AsyncCreatorType"
              },
              {
                "id": 4,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 5,
                "name": "planCreationId",
                "type": "string"
              },
              {
                "id": 6,
                "name": "deps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "context",
                  "type": "PlanCreationContextValue"
                }
              }
            ]
          },
          {
            "name": "PartialPlanResponse",
            "fields": [
              {
                "id": 1,
                "name": "notifyId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "errorResponse",
                "type": "ErrorResponse"
              },
              {
                "id": 3,
                "name": "blobResponse",
                "type": "PlanCreationBlobResponse"
              },
              {
                "id": 4,
                "name": "type",
                "type": "AsyncCreatorType"
              },
              {
                "id": 5,
                "name": "planCreationId",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/plan/plan_creation_service.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:execution_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "ExecutionMetadata",
            "fields": [
              {
                "id": 1,
                "name": "runSequence",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "triggerInfo",
                "type": "ExecutionTriggerInfo"
              },
              {
                "id": 4,
                "name": "pipelineIdentifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "executionUuid",
                "type": "string"
              },
              {
                "id": 8,
                "name": "principalInfo",
                "type": "ExecutionPrincipalInfo"
              },
              {
                "id": 10,
                "name": "gitSyncBranchContext",
                "type": "bytes"
              },
              {
                "id": 11,
                "name": "moduleType",
                "type": "string"
              },
              {
                "id": 12,
                "name": "retryInfo",
                "type": "RetryExecutionInfo"
              },
              {
                "id": 13,
                "name": "isNotificationConfigured",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RetryExecutionInfo",
            "fields": [
              {
                "id": 1,
                "name": "isRetry",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "rootExecutionId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "parentRetryId",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/plan/trigger_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/principal_info.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:graph_layout.proto",
      "def": {
        "messages": [
          {
            "name": "GraphLayoutNode",
            "fields": [
              {
                "id": 1,
                "name": "nodeType",
                "type": "string"
              },
              {
                "id": 2,
                "name": "nodeIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nodeUUID",
                "type": "string"
              },
              {
                "id": 4,
                "name": "edgeLayoutList",
                "type": "EdgeLayoutList"
              },
              {
                "id": 5,
                "name": "nodeGroup",
                "type": "string"
              },
              {
                "id": 6,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "EdgeLayoutList",
            "fields": [
              {
                "id": 1,
                "name": "currentNodeChildren",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "nextIds",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:plan.proto",
      "def": {
        "messages": [
          {
            "name": "Plan",
            "fields": [
              {
                "id": 1,
                "name": "startingNodeId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "nodes",
                "type": "PlanNodeProto",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/plan/plan_node_proto.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:plan_creation_service.proto",
      "def": {
        "messages": [
          {
            "name": "PlanCreationBlobRequest",
            "fields": [
              {
                "id": 5,
                "name": "deps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "context",
                  "type": "PlanCreationContextValue"
                }
              }
            ]
          },
          {
            "name": "PlanCreationResponse",
            "fields": [
              {
                "id": 1,
                "name": "errorResponse",
                "type": "ErrorResponse"
              },
              {
                "id": 2,
                "name": "blobResponse",
                "type": "PlanCreationBlobResponse"
              }
            ]
          },
          {
            "name": "PlanCreationBlobResponse",
            "fields": [
              {
                "id": 3,
                "name": "startingNodeId",
                "type": "string"
              },
              {
                "id": 5,
                "name": "graphLayoutInfo",
                "type": "GraphLayoutInfo"
              },
              {
                "id": 6,
                "name": "deps",
                "type": "Dependencies"
              },
              {
                "id": 7,
                "name": "yamlUpdates",
                "type": "YamlUpdates"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "nodes",
                  "type": "PlanNodeProto"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "context",
                  "type": "PlanCreationContextValue"
                }
              }
            ]
          },
          {
            "name": "GraphLayoutInfo",
            "fields": [
              {
                "id": 1,
                "name": "startingNodeId",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "layoutNodes",
                  "type": "GraphLayoutNode"
                }
              }
            ]
          },
          {
            "name": "PlanCreationContextValue",
            "fields": [
              {
                "id": 1,
                "name": "stringValue",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "ExecutionMetadata"
              },
              {
                "id": 3,
                "name": "triggerPayload",
                "type": "triggers.TriggerPayload"
              },
              {
                "id": 4,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "projectIdentifier",
                "type": "string"
              }
            ]
          },
          {
            "name": "YamlFieldBlob",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "blob",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "FilterCreationBlobRequest",
            "fields": [
              {
                "id": 2,
                "name": "setupMetadata",
                "type": "SetupMetadata"
              },
              {
                "id": 3,
                "name": "deps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "FilterCreationResponse",
            "fields": [
              {
                "id": 1,
                "name": "errorResponse",
                "type": "ErrorResponse"
              },
              {
                "id": 2,
                "name": "blobResponse",
                "type": "FilterCreationBlobResponse"
              }
            ]
          },
          {
            "name": "FilterCreationBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "filter",
                "type": "string"
              },
              {
                "id": 2,
                "name": "stageCount",
                "type": "uint32"
              },
              {
                "id": 6,
                "name": "startingNodeId",
                "type": "string"
              },
              {
                "id": 7,
                "name": "referredEntities",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "stageNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "deps",
                "type": "Dependencies"
              },
              {
                "id": 10,
                "name": "yamlUpdates",
                "type": "YamlUpdates"
              },
              {
                "id": 11,
                "name": "resolvedDeps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "resolvedDependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "VariablesCreationBlobRequest",
            "fields": [
              {
                "id": 2,
                "name": "metadata",
                "type": "VariablesCreationMetadata"
              },
              {
                "id": 3,
                "name": "deps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "VariablesCreationResponse",
            "fields": [
              {
                "id": 1,
                "name": "errorResponse",
                "type": "ErrorResponse"
              },
              {
                "id": 2,
                "name": "blobResponse",
                "type": "VariablesCreationBlobResponse"
              }
            ]
          },
          {
            "name": "VariablesCreationBlobResponse",
            "fields": [
              {
                "id": 4,
                "name": "errorResponse",
                "type": "ErrorResponse",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "deps",
                "type": "Dependencies"
              },
              {
                "id": 7,
                "name": "yamlUpdates",
                "type": "YamlUpdates"
              },
              {
                "id": 8,
                "name": "resolvedDeps",
                "type": "Dependencies"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "yamlProperties",
                  "type": "YamlProperties"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "dependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resolvedDependencies",
                  "type": "YamlFieldBlob",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "yamlOutputProperties",
                  "type": "YamlOutputProperties"
                }
              }
            ]
          },
          {
            "name": "ErrorResponse",
            "fields": [
              {
                "id": 1,
                "name": "messages",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SetupMetadata",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "projectId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "orgId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "gitSyncBranchContext",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "VariablesCreationMetadata",
            "fields": [
              {
                "id": 1,
                "name": "gitSyncBranchContext",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Dependencies",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "dependencies",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "dependencyMetadata",
                  "type": "Dependency"
                }
              }
            ]
          },
          {
            "name": "Dependency",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "metadata",
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "name": "YamlUpdates",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fqnToYaml",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PlanCreationService",
            "rpcs": [
              {
                "name": "createPlan",
                "in_type": "PlanCreationBlobRequest",
                "out_type": "PlanCreationResponse"
              },
              {
                "name": "createFilter",
                "in_type": "FilterCreationBlobRequest",
                "out_type": "FilterCreationResponse"
              },
              {
                "name": "createVariablesYaml",
                "in_type": "VariablesCreationBlobRequest",
                "out_type": "VariablesCreationResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/plan/plan_node_proto.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/graph_layout.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/variables.proto"
          },
          {
            "path": "io/harness/pms/contracts/plan/execution_metadata.proto"
          },
          {
            "path": "io/harness/pms/contracts/triggers/trigger_payload.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:plan_node_proto.proto",
      "def": {
        "messages": [
          {
            "name": "PlanNodeProto",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "stepType",
                "type": "io.harness.pms.contracts.steps.StepType"
              },
              {
                "id": 4,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "group",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 6,
                "name": "stepParameters",
                "type": "string"
              },
              {
                "id": 7,
                "name": "rebObjects",
                "type": "io.harness.pms.contracts.refobjects.RefObject",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "adviserObtainments",
                "type": "io.harness.pms.contracts.advisers.AdviserObtainment",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "facilitatorObtainments",
                "type": "io.harness.pms.contracts.facilitators.FacilitatorObtainment",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "skipExpressionChain",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "skipType",
                "type": "io.harness.pms.contracts.steps.SkipType"
              },
              {
                "id": 12,
                "name": "skipCondition",
                "type": "string"
              },
              {
                "id": 13,
                "name": "serviceName",
                "type": "string"
              },
              {
                "id": 14,
                "name": "timeoutObtainments",
                "type": "io.harness.timeout.contracts.TimeoutObtainment",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "stepInputs",
                "type": "string"
              },
              {
                "id": 16,
                "name": "whenCondition",
                "type": "string"
              },
              {
                "id": 17,
                "name": "skipUnresolvedExpressionsCheck",
                "type": "bool"
              },
              {
                "id": 18,
                "name": "stageFqn",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/advisers/advisers.proto"
          },
          {
            "path": "io/harness/pms/contracts/facilitators/facilitators.proto"
          },
          {
            "path": "io/harness/pms/contracts/steps/step_type.proto"
          },
          {
            "path": "io/harness/pms/contracts/steps/skip_type.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          },
          {
            "path": "io/harness/timeout/contracts/timeouts.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:principal_info.proto",
      "def": {
        "enums": [
          {
            "name": "PrincipalType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "USER",
                "integer": 1
              },
              {
                "name": "USER_GROUP",
                "integer": 2
              },
              {
                "name": "API_KEY",
                "integer": 3
              },
              {
                "name": "SERVICE",
                "integer": 4
              },
              {
                "name": "SERVICE_ACCOUNT",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ExecutionPrincipalInfo",
            "fields": [
              {
                "id": 1,
                "name": "principal",
                "type": "string"
              },
              {
                "id": 2,
                "name": "principalType",
                "type": "PrincipalType"
              },
              {
                "id": 3,
                "name": "shouldValidateRbac",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:trigger_info.proto",
      "def": {
        "enums": [
          {
            "name": "TriggerType",
            "enum_fields": [
              {
                "name": "NOOP"
              },
              {
                "name": "MANUAL",
                "integer": 1
              },
              {
                "name": "WEBHOOK",
                "integer": 2
              },
              {
                "name": "WEBHOOK_CUSTOM",
                "integer": 3
              },
              {
                "name": "SCHEDULER_CRON",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ExecutionTriggerInfo",
            "fields": [
              {
                "id": 1,
                "name": "triggerType",
                "type": "TriggerType"
              },
              {
                "id": 2,
                "name": "triggeredBy",
                "type": "TriggeredBy"
              },
              {
                "id": 3,
                "name": "isRerun",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "rerunInfo",
                "type": "RerunInfo"
              }
            ]
          },
          {
            "name": "TriggeredBy",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "identifier",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "extraInfo",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "RerunInfo",
            "fields": [
              {
                "id": 1,
                "name": "rootExecutionId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rootTriggerType",
                "type": "TriggerType"
              },
              {
                "id": 3,
                "name": "prevExecutionId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "prevTriggerType",
                "type": "TriggerType"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:plan:/:variables.proto",
      "def": {
        "messages": [
          {
            "name": "YamlProperties",
            "fields": [
              {
                "id": 1,
                "name": "fqn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "localName",
                "type": "string"
              }
            ]
          },
          {
            "name": "YamlOutputProperties",
            "fields": [
              {
                "id": 1,
                "name": "fqn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "localName",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:progress:/:progress_event.proto",
      "def": {
        "messages": [
          {
            "name": "ProgressEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "executionMode",
                "type": "io.harness.pms.contracts.execution.ExecutionMode"
              },
              {
                "id": 3,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "progressBytes",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/execution_mode.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.progress"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:refobjects:/:ref_objects.proto",
      "def": {
        "messages": [
          {
            "name": "RefObject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "producerId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "refType",
                "type": "RefType"
              }
            ]
          },
          {
            "name": "RefType",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.refobjects"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:resume:/:node_resume_event.proto",
      "def": {
        "messages": [
          {
            "name": "NodeResumeEvent",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "executionMode",
                "type": "io.harness.pms.contracts.execution.ExecutionMode"
              },
              {
                "id": 3,
                "name": "stepParameters",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "refObjects",
                "type": "io.harness.pms.contracts.refobjects.RefObject",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "asyncError",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "chainDetails",
                "type": "ChainDetails"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "response",
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "name": "ChainDetails",
            "fields": [
              {
                "id": 1,
                "name": "isEnd",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "passThroughData",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/execution_mode.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.resume"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:engine_expression_proto_service.proto",
      "def": {
        "messages": [
          {
            "name": "ExpressionRenderBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "expression",
                "type": "string"
              },
              {
                "id": 3,
                "name": "skipUnresolvedExpressionsCheck",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExpressionRenderBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExpressionEvaluateBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "expression",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExpressionEvaluateBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "EngineExpressionProtoService",
            "rpcs": [
              {
                "name": "renderExpression",
                "in_type": "ExpressionRenderBlobRequest",
                "out_type": "ExpressionRenderBlobResponse"
              },
              {
                "name": "evaluateExpression",
                "in_type": "ExpressionEvaluateBlobRequest",
                "out_type": "ExpressionEvaluateBlobResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:entity_reference_service.proto",
      "def": {
        "messages": [
          {
            "name": "EntityReferenceRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 4,
                "name": "projectIdentifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "gitSyncBranchContext",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EntityReferenceResponse",
            "fields": [
              {
                "id": 1,
                "name": "referredEntities",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "EntityReferenceService",
            "rpcs": [
              {
                "name": "getReferences",
                "in_type": "EntityReferenceRequest",
                "out_type": "EntityReferenceResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:interrupt_proto_service.proto",
      "def": {
        "messages": [
          {
            "name": "InterruptRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifyId",
                "type": "string"
              }
            ]
          },
          {
            "name": "InterruptResponse",
            "fields": [
              {
                "id": 1,
                "name": "dummy",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "InterruptProtoService",
            "rpcs": [
              {
                "name": "handleAbort",
                "in_type": "InterruptRequest",
                "out_type": "InterruptResponse"
              },
              {
                "name": "handleFailure",
                "in_type": "InterruptRequest",
                "out_type": "InterruptResponse"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:node_execution_event.proto",
      "def": {
        "enums": [
          {
            "name": "NodeExecutionEventType",
            "enum_fields": [
              {
                "name": "UNKNOWN_NODE_EVENT"
              },
              {
                "name": "FACILITATE",
                "integer": 1
              },
              {
                "name": "START",
                "integer": 2
              },
              {
                "name": "RESUME",
                "integer": 3
              },
              {
                "name": "ADVISE",
                "integer": 4
              },
              {
                "name": "PROGRESS",
                "integer": 5
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:outcome_proto_service.proto",
      "def": {
        "messages": [
          {
            "name": "OutcomeFetchOutcomeBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "outcomeInstanceId",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeFetchOutcomeBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "outcome",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeFindAllBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "planExecutionId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "runtimeId",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeFindAllBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "outcomes",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OutcomeFetchOutcomesBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "outcomeInstanceIds",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OutcomeFetchOutcomesBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "outcomes",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OutcomeResolveBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "refObject",
                "type": "io.harness.pms.contracts.refobjects.RefObject"
              }
            ]
          },
          {
            "name": "OutcomeResolveBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "stepTransput",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeConsumeBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "groupName",
                "type": "string"
              },
              {
                "id": 4,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeConsumeBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "response",
                "type": "string"
              }
            ]
          },
          {
            "name": "OutcomeResolveOptionalBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "refObject",
                "type": "io.harness.pms.contracts.refobjects.RefObject"
              }
            ]
          },
          {
            "name": "OutcomeResolveOptionalBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "outcome",
                "type": "string"
              },
              {
                "id": 2,
                "name": "found",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "OutcomeProtoService",
            "rpcs": [
              {
                "name": "resolve",
                "in_type": "OutcomeResolveBlobRequest",
                "out_type": "OutcomeResolveBlobResponse"
              },
              {
                "name": "consume",
                "in_type": "OutcomeConsumeBlobRequest",
                "out_type": "OutcomeConsumeBlobResponse"
              },
              {
                "name": "findAllByRuntimeId",
                "in_type": "OutcomeFindAllBlobRequest",
                "out_type": "OutcomeFindAllBlobResponse"
              },
              {
                "name": "fetchOutcomes",
                "in_type": "OutcomeFetchOutcomesBlobRequest",
                "out_type": "OutcomeFetchOutcomesBlobResponse"
              },
              {
                "name": "fetchOutcome",
                "in_type": "OutcomeFetchOutcomeBlobRequest",
                "out_type": "OutcomeFetchOutcomeBlobResponse"
              },
              {
                "name": "resolveOptional",
                "in_type": "OutcomeResolveOptionalBlobRequest",
                "out_type": "OutcomeResolveOptionalBlobResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:pms_execution_service.proto",
      "def": {
        "messages": [
          {
            "name": "ExecutionSummaryUpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "planExecutionId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "moduleName",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nodeUuid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "nodeModuleInfoJson",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pipelineModuleInfoJson",
                "type": "string"
              },
              {
                "id": 6,
                "name": "nodeExecutionId",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExecutionSummaryResponse"
          }
        ],
        "services": [
          {
            "name": "PmsExecutionService",
            "rpcs": [
              {
                "name": "updateExecutionSummary",
                "in_type": "ExecutionSummaryUpdateRequest",
                "out_type": "ExecutionSummaryResponse"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:pms_service.proto",
      "def": {
        "enums": [
          {
            "name": "ExpansionRequestType",
            "enum_fields": [
              {
                "name": "LOCAL_FQN"
              },
              {
                "name": "KEY",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "InitializeSdkRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "supportedSteps",
                "type": "io.harness.pms.contracts.steps.SdkStep",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "sdkModuleInfo",
                "type": "SdkModuleInfo"
              },
              {
                "id": 6,
                "name": "interruptConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 7,
                "name": "orchestrationEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 8,
                "name": "facilitatorEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 9,
                "name": "nodeStartEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 10,
                "name": "progressEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 11,
                "name": "nodeAdviseEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 12,
                "name": "nodeResumeEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 14,
                "name": "planCreationEventConsumerConfig",
                "type": "ConsumerConfig"
              },
              {
                "id": 16,
                "name": "sdkFunctors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "jsonExpansionInfo",
                "type": "JsonExpansionInfo",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "supportedTypes",
                  "type": "Types"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 15,
                  "name": "staticAliases",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "InitializeSdkResponse"
          },
          {
            "name": "Types",
            "fields": [
              {
                "id": 1,
                "name": "types",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SdkModuleInfo",
            "fields": [
              {
                "id": 1,
                "name": "displayName",
                "type": "string"
              }
            ]
          },
          {
            "name": "ConsumerConfig",
            "fields": [
              {
                "id": 1,
                "name": "redis",
                "type": "Redis"
              }
            ]
          },
          {
            "name": "Redis",
            "fields": [
              {
                "id": 1,
                "name": "topicName",
                "type": "string"
              }
            ]
          },
          {
            "name": "JsonExpansionInfo",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "expansionType",
                "type": "ExpansionRequestType"
              },
              {
                "id": 3,
                "name": "expansionKey",
                "type": "string"
              },
              {
                "id": 4,
                "name": "stageType",
                "type": "io.harness.pms.contracts.steps.StepType"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PmsService",
            "rpcs": [
              {
                "name": "initializeSdk",
                "in_type": "InitializeSdkRequest",
                "out_type": "InitializeSdkResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/steps/step_type.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.plan"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:sweeping_output_service.proto",
      "def": {
        "messages": [
          {
            "name": "SweepingOutputResolveBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "refObject",
                "type": "io.harness.pms.contracts.refobjects.RefObject"
              }
            ]
          },
          {
            "name": "SweepingOutputListRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nodeIds",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SweepingOutputListResponse",
            "fields": [
              {
                "id": 1,
                "name": "sweepingOutputResolveBlobResponses",
                "type": "OptionalSweepingOutputResolveBlobResponse",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SweepingOutputResolveBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "stepTransput",
                "type": "string"
              }
            ]
          },
          {
            "name": "OptionalSweepingOutputResolveBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "found",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "stepTransput",
                "type": "string"
              }
            ]
          },
          {
            "name": "SweepingOutputConsumeBlobRequest",
            "fields": [
              {
                "id": 1,
                "name": "ambiance",
                "type": "io.harness.pms.contracts.ambiance.Ambiance"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "groupName",
                "type": "string"
              },
              {
                "id": 4,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "SweepingOutputConsumeBlobResponse",
            "fields": [
              {
                "id": 1,
                "name": "response",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SweepingOutputService",
            "rpcs": [
              {
                "name": "resolve",
                "in_type": "SweepingOutputResolveBlobRequest",
                "out_type": "SweepingOutputResolveBlobResponse"
              },
              {
                "name": "resolveOptional",
                "in_type": "SweepingOutputResolveBlobRequest",
                "out_type": "OptionalSweepingOutputResolveBlobResponse"
              },
              {
                "name": "consume",
                "in_type": "SweepingOutputConsumeBlobRequest",
                "out_type": "SweepingOutputConsumeBlobResponse"
              },
              {
                "name": "listOutputsUsingNodeIds",
                "in_type": "SweepingOutputListRequest",
                "out_type": "SweepingOutputListResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/ambiance/ambiance.proto"
          },
          {
            "path": "io/harness/pms/contracts/refobjects/ref_objects.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:service:/:variables_service.proto",
      "def": {
        "messages": [
          {
            "name": "VariableMergeResponseProto",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 3,
                "name": "errorResponses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "serviceExpressionPropertiesList",
                "type": "ServiceExpressionPropertiesProto",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "metadataMap",
                  "type": "VariableResponseMapValueProto"
                }
              }
            ]
          },
          {
            "name": "VariablesServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              }
            ]
          },
          {
            "name": "VariableResponseMapValueProto",
            "fields": [
              {
                "id": 1,
                "name": "yamlProperties",
                "type": "io.harness.pms.contracts.plan.YamlProperties"
              },
              {
                "id": 2,
                "name": "yamlOutputProperties",
                "type": "io.harness.pms.contracts.plan.YamlOutputProperties"
              }
            ]
          },
          {
            "name": "ServiceExpressionPropertiesProto",
            "fields": [
              {
                "id": 1,
                "name": "serviceName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "expression",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VariablesService",
            "rpcs": [
              {
                "name": "getVariables",
                "in_type": "VariablesServiceRequest",
                "out_type": "VariableMergeResponseProto"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/pms/contracts/plan/variables.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:steps:/:io:/:step_outcome_proto.proto",
      "def": {
        "messages": [
          {
            "name": "StepOutcomeProto",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "outcome",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.steps.io"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:steps:/:io:/:step_response_proto.proto",
      "def": {
        "messages": [
          {
            "name": "StepResponseProto",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "execution.Status"
              },
              {
                "id": 2,
                "name": "stepOutcomes",
                "type": "StepOutcomeProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "failureInfo",
                "type": "execution.failure.FailureInfo"
              },
              {
                "id": 4,
                "name": "skipInfo",
                "type": "execution.skip.SkipInfo"
              },
              {
                "id": 5,
                "name": "unitProgress",
                "type": "logging.UnitProgress",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "graphOutcomes",
                "type": "StepOutcomeProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "nodeRunInfo",
                "type": "execution.run.NodeRunInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/logging/unit_progress.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/failure/failure_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/skip/skip_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/run/node_run_info.proto"
          },
          {
            "path": "io/harness/pms/contracts/execution/status.proto"
          },
          {
            "path": "io/harness/pms/contracts/steps/io/step_outcome_proto.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.steps.io"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:steps:/:skip_type.proto",
      "def": {
        "enums": [
          {
            "name": "SkipType",
            "enum_fields": [
              {
                "name": "NOOP"
              },
              {
                "name": "SKIP_TREE",
                "integer": 1
              },
              {
                "name": "SKIP_NODE",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.steps"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:steps:/:step_type.proto",
      "def": {
        "enums": [
          {
            "name": "StepCategory",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PIPELINE",
                "integer": 1
              },
              {
                "name": "STAGE",
                "integer": 2
              },
              {
                "name": "STEP",
                "integer": 3
              },
              {
                "name": "STAGES",
                "integer": 4
              },
              {
                "name": "FORK",
                "integer": 5
              },
              {
                "name": "STEP_GROUP",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SdkStep",
            "fields": [
              {
                "id": 1,
                "name": "stepType",
                "type": "StepType"
              },
              {
                "id": 2,
                "name": "stepInfo",
                "type": "StepInfo"
              },
              {
                "id": 3,
                "name": "isPartOfStepPallete",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StepType",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "stepCategory",
                "type": "StepCategory"
              }
            ]
          },
          {
            "name": "StepInfo",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "stepMetaData",
                "type": "StepMetaData"
              },
              {
                "id": 4,
                "name": "featureFlag",
                "type": "string"
              },
              {
                "id": 5,
                "name": "featureRestrictionName",
                "type": "string"
              }
            ]
          },
          {
            "name": "StepMetaData",
            "fields": [
              {
                "id": 1,
                "name": "category",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "folderPath",
                "type": "string"
              },
              {
                "id": 3,
                "name": "folderPaths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.steps"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "890-pms-contracts:/:src:/:main:/:proto:/:io:/:harness:/:pms:/:contracts:/:triggers:/:trigger_payload.proto",
      "def": {
        "enums": [
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "CUSTOM"
              },
              {
                "name": "GIT",
                "integer": 1
              },
              {
                "name": "SCHEDULED",
                "integer": 2
              },
              {
                "name": "WEBHOOK",
                "integer": 3
              },
              {
                "name": "ARTIFACT",
                "integer": 4
              },
              {
                "name": "MANIFEST",
                "integer": 5
              }
            ]
          },
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "CUSTOM_REPO"
              },
              {
                "name": "GITHUB_REPO",
                "integer": 1
              },
              {
                "name": "GITLAB_REPO",
                "integer": 2
              },
              {
                "name": "BITBUCKET_REPO",
                "integer": 3
              },
              {
                "name": "AWS_CODECOMMIT_REPO",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TriggerPayload",
            "fields": [
              {
                "id": 2,
                "name": "parsedPayload",
                "type": "ParsedPayload"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 5,
                "name": "sourceType",
                "type": "SourceType"
              },
              {
                "id": 6,
                "name": "artifactData",
                "type": "ArtifactData"
              },
              {
                "id": 7,
                "name": "manifestData",
                "type": "ManifestData"
              },
              {
                "id": 8,
                "name": "version",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "headers",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ArtifactData",
            "fields": [
              {
                "id": 1,
                "name": "build",
                "type": "string"
              }
            ]
          },
          {
            "name": "ManifestData",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "ParsedPayload",
            "fields": [
              {
                "id": 1,
                "name": "pr",
                "type": "product.ci.scm.proto.PullRequestHook"
              },
              {
                "id": 2,
                "name": "push",
                "type": "product.ci.scm.proto.PushHook"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "product/ci/scm/proto/scm.proto"
          }
        ],
        "package": {
          "name": "io.harness.pms.contracts.triggers"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "910-delegate-task-grpc-service:/:src:/:main:/:proto:/:io:/:harness:/:task:/:service:/:task_service.proto",
      "def": {
        "enums": [
          {
            "name": "TaskType",
            "enum_fields": [
              {
                "name": "JIRA"
              },
              {
                "name": "HTTP",
                "integer": 1
              }
            ]
          },
          {
            "name": "StepExecutionStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              },
              {
                "name": "RUNNING",
                "integer": 2
              },
              {
                "name": "QUEUED",
                "integer": 3
              },
              {
                "name": "SKIPPED",
                "integer": 4
              },
              {
                "name": "ABORTED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TaskProgressRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "io.harness.delegate.AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              }
            ]
          },
          {
            "name": "TaskProgressResponse",
            "fields": [
              {
                "id": 1,
                "name": "current_stage",
                "type": "io.harness.delegate.TaskExecutionStage"
              }
            ]
          },
          {
            "name": "ExecuteParkedTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "io.harness.delegate.AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              },
              {
                "id": 3,
                "name": "total_expiry",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "ExecuteParkedTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              }
            ]
          },
          {
            "name": "FetchParkedTaskStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "io.harness.delegate.AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 4,
                "name": "task_type",
                "type": "TaskType"
              }
            ]
          },
          {
            "name": "FetchParkedTaskStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              },
              {
                "id": 2,
                "name": "task_type",
                "type": "TaskType"
              },
              {
                "id": 3,
                "name": "have_response_data",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "jira_task_response",
                "type": "JiraTaskResponse"
              },
              {
                "id": 5,
                "name": "http_task_response",
                "type": "HTTPTaskResponse"
              },
              {
                "id": 6,
                "name": "serialized_task_results",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "HTTPTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "httpResponseBody",
                "type": "string"
              },
              {
                "id": 2,
                "name": "httpResponseCode",
                "type": "int32"
              }
            ]
          },
          {
            "name": "JiraTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "SendTaskStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "io.harness.delegate.AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 4,
                "name": "task_status_data",
                "type": "TaskStatusData"
              }
            ]
          },
          {
            "name": "TaskStatusData",
            "fields": [
              {
                "id": 1,
                "name": "step_status",
                "type": "StepStatus"
              }
            ]
          },
          {
            "name": "StepStatus",
            "fields": [
              {
                "id": 1,
                "name": "num_retries",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_time_taken",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 3,
                "name": "step_execution_status",
                "type": "StepExecutionStatus"
              },
              {
                "id": 4,
                "name": "step_output",
                "type": "StepMapOutput"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "artifact",
                "type": "io.harness.product.ci.engine.proto.Artifact"
              }
            ]
          },
          {
            "name": "StepMapOutput",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "output",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SendTaskStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SendTaskProgressRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "io.harness.delegate.AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "io.harness.delegate.TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 4,
                "name": "task_response_data",
                "type": "io.harness.delegate.TaskResponseData"
              }
            ]
          },
          {
            "name": "SendTaskProgressResponse",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TaskService",
            "rpcs": [
              {
                "name": "ExecuteParkedTask",
                "in_type": "ExecuteParkedTaskRequest",
                "out_type": "ExecuteParkedTaskResponse"
              },
              {
                "name": "TaskProgress",
                "in_type": "TaskProgressRequest",
                "out_type": "TaskProgressResponse"
              },
              {
                "name": "FetchParkedTaskStatus",
                "in_type": "FetchParkedTaskStatusRequest",
                "out_type": "FetchParkedTaskStatusResponse"
              },
              {
                "name": "SendTaskStatus",
                "in_type": "SendTaskStatusRequest",
                "out_type": "SendTaskStatusResponse"
              },
              {
                "name": "SendTaskProgress",
                "in_type": "SendTaskProgressRequest",
                "out_type": "SendTaskProgressResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/progress.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/task.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/callback/callback.proto"
          },
          {
            "path": "product/ci/engine/proto/artifact.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "io.harness.task.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "910_delegate_task_grpc_service"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-agent-beans:/:src:/:main:/:proto:/:io:/:harness:/:managerclient:/:manager_client_execution.proto",
      "def": {
        "enums": [
          {
            "name": "HttpsCertRequirement.CertRequirement",
            "enum_fields": [
              {
                "name": "UNKNOWN_REQUIREMENT"
              },
              {
                "name": "CERTIFICATE_REQUIRED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DelegateVersionsQuery"
          },
          {
            "name": "DelegateVersions",
            "fields": [
              {
                "id": 2,
                "name": "delegate_version",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HttpsCertRequirementQuery"
          },
          {
            "name": "HttpsCertRequirement",
            "fields": [
              {
                "id": 1,
                "name": "cert_requirement",
                "type": "CertRequirement"
              }
            ]
          },
          {
            "name": "AccountPreferenceQuery"
          },
          {
            "name": "AccountPreference",
            "fields": [
              {
                "id": 1,
                "name": "delegateSecretsCacheTTLInHours",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.managerclient"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_agent_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-agent-beans:/:src:/:main:/:proto:/:io:/:harness:/:managerclient:/:manager_client_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetDelegatePropertiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_entry",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDelegatePropertiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "response_entry",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "io.harness.managerclient"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_agent_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:callback:/:callback.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateCallbackToken",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              }
            ]
          },
          {
            "name": "DelegateCallback",
            "fields": [
              {
                "id": 1,
                "name": "https_client_entrypoint",
                "type": "HttpsClientEntrypoint"
              },
              {
                "id": 2,
                "name": "mongo_database",
                "type": "MongoDatabase"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/callback/http_entrypoint.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/callback/mongodb.proto"
          }
        ],
        "package": {
          "name": "io.harness.callback"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:callback:/:http_entrypoint.proto",
      "def": {
        "messages": [
          {
            "name": "BasicAuthCredentials",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "password",
                "type": "string"
              }
            ]
          },
          {
            "name": "HttpsClientEntrypoint",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "basic_auth_credentials",
                "type": "BasicAuthCredentials"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.callback"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:callback:/:mongodb.proto",
      "def": {
        "messages": [
          {
            "name": "MongoDatabase",
            "fields": [
              {
                "id": 1,
                "name": "connection",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collection_name_prefix",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.callback"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:delegate_service.proto",
      "def": {
        "messages": [
          {
            "name": "SubmitTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 3,
                "name": "setup_abstractions",
                "type": "TaskSetupAbstractions"
              },
              {
                "id": 7,
                "name": "log_abstractions",
                "type": "TaskLogAbstractions"
              },
              {
                "id": 4,
                "name": "details",
                "type": "TaskDetails"
              },
              {
                "id": 5,
                "name": "capabilities",
                "type": "Capability",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "selectors",
                "type": "TaskSelector",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "queue_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 9,
                "name": "selectionTrackingLogEnabled",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "force_execute",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SubmitTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "TaskId"
              },
              {
                "id": 2,
                "name": "total_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "CancelTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              }
            ]
          },
          {
            "name": "CancelTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "canceled_at_stage",
                "type": "TaskExecutionStage"
              }
            ]
          },
          {
            "name": "ExecuteParkedTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              },
              {
                "id": 3,
                "name": "results_prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExecuteParkedTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "TaskId"
              }
            ]
          },
          {
            "name": "FetchParkedTaskStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              }
            ]
          },
          {
            "name": "FetchParkedTaskStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "fetch_results",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "serialized_task_results",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "SendTaskStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 4,
                "name": "task_response_data",
                "type": "TaskResponseData"
              }
            ]
          },
          {
            "name": "SendTaskProgressRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              },
              {
                "id": 3,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              },
              {
                "id": 4,
                "name": "task_response_data",
                "type": "TaskResponseData"
              }
            ]
          },
          {
            "name": "SendTaskStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SendTaskProgressResponse",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TaskProgressRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              }
            ]
          },
          {
            "name": "TaskProgressResponse",
            "fields": [
              {
                "id": 1,
                "name": "currently_at_stage",
                "type": "TaskExecutionStage"
              }
            ]
          },
          {
            "name": "TaskProgressUpdatesRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "TaskId"
              }
            ]
          },
          {
            "name": "TaskProgressUpdatesResponse",
            "fields": [
              {
                "id": 1,
                "name": "currently_at_stage",
                "type": "TaskExecutionStage"
              }
            ]
          },
          {
            "name": "RegisterCallbackRequest",
            "fields": [
              {
                "id": 1,
                "name": "callback",
                "type": "callback.DelegateCallback"
              }
            ]
          },
          {
            "name": "RegisterCallbackResponse",
            "fields": [
              {
                "id": 1,
                "name": "callback_token",
                "type": "callback.DelegateCallbackToken"
              }
            ]
          },
          {
            "name": "CreatePerpetualTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 7,
                "name": "client_task_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "schedule",
                "type": "perpetualtask.PerpetualTaskSchedule"
              },
              {
                "id": 4,
                "name": "context",
                "type": "perpetualtask.PerpetualTaskClientContextDetails"
              },
              {
                "id": 5,
                "name": "allow_duplicate",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "task_description",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreatePerpetualTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "perpetual_task_id",
                "type": "perpetualtask.PerpetualTaskId"
              }
            ]
          },
          {
            "name": "DeletePerpetualTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "perpetual_task_id",
                "type": "perpetualtask.PerpetualTaskId"
              }
            ]
          },
          {
            "name": "DeletePerpetualTaskResponse"
          },
          {
            "name": "ResetPerpetualTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "AccountId"
              },
              {
                "id": 2,
                "name": "perpetual_task_id",
                "type": "perpetualtask.PerpetualTaskId"
              },
              {
                "id": 3,
                "name": "task_execution_bundle",
                "type": "perpetualtask.PerpetualTaskExecutionBundle"
              }
            ]
          },
          {
            "name": "ResetPerpetualTaskResponse"
          },
          {
            "name": "Documents",
            "fields": [
              {
                "id": 1,
                "name": "collection_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "uuid",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ObtainDocumentRequest",
            "fields": [
              {
                "id": 1,
                "name": "documents",
                "type": "Documents",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Document",
            "fields": [
              {
                "id": 1,
                "name": "collection_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "uuid",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kryo_bytes",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "ObtainDocumentResponse",
            "fields": [
              {
                "id": 1,
                "name": "documents",
                "type": "Document",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DelegateService",
            "rpcs": [
              {
                "name": "RegisterCallback",
                "in_type": "RegisterCallbackRequest",
                "out_type": "RegisterCallbackResponse"
              },
              {
                "name": "SubmitTask",
                "in_type": "SubmitTaskRequest",
                "out_type": "SubmitTaskResponse"
              },
              {
                "name": "CancelTask",
                "in_type": "CancelTaskRequest",
                "out_type": "CancelTaskResponse"
              },
              {
                "name": "TaskProgress",
                "in_type": "TaskProgressRequest",
                "out_type": "TaskProgressResponse"
              },
              {
                "name": "TaskProgressUpdates",
                "in_type": "TaskProgressUpdatesRequest",
                "out_type": "TaskProgressUpdatesResponse",
                "out_streamed": true
              },
              {
                "name": "ExecuteParkedTask",
                "in_type": "ExecuteParkedTaskRequest",
                "out_type": "ExecuteParkedTaskResponse"
              },
              {
                "name": "FetchParkedTaskStatus",
                "in_type": "FetchParkedTaskStatusRequest",
                "out_type": "FetchParkedTaskStatusResponse"
              },
              {
                "name": "SendTaskStatus",
                "in_type": "SendTaskStatusRequest",
                "out_type": "SendTaskStatusResponse"
              },
              {
                "name": "SendTaskProgress",
                "in_type": "SendTaskProgressRequest",
                "out_type": "SendTaskProgressResponse"
              },
              {
                "name": "CreatePerpetualTask",
                "in_type": "CreatePerpetualTaskRequest",
                "out_type": "CreatePerpetualTaskResponse"
              },
              {
                "name": "DeletePerpetualTask",
                "in_type": "DeletePerpetualTaskRequest",
                "out_type": "DeletePerpetualTaskResponse"
              },
              {
                "name": "ResetPerpetualTask",
                "in_type": "ResetPerpetualTaskRequest",
                "out_type": "ResetPerpetualTaskResponse"
              },
              {
                "name": "ObtainDocument",
                "in_type": "ObtainDocumentRequest",
                "out_type": "ObtainDocumentResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/capability.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/perpetualtask/perpetual_task.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/task.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegate/progress.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/callback/callback.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/perpetualtask/perpetual_task_client.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:delegate_task.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateClassicTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "delegate_task_kryo",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "AbortExpireTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "delegate_task_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreatePerpetualTaskRequestClassic",
            "fields": [
              {
                "id": 1,
                "name": "perpetual_task_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "client_context_kryo",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "perpetual_task_schedule_kryo",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "allowDuplicate",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "task_description",
                "type": "string"
              }
            ]
          },
          {
            "name": "QueueTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExecuteTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "delegate_task_response_kryo",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "AbortTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "delegate_task_kryo",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "ExpireTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreatePerpetualTaskResponseClassic",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DelegateTask",
            "rpcs": [
              {
                "name": "QueueTask",
                "in_type": "DelegateClassicTaskRequest",
                "out_type": "QueueTaskResponse"
              },
              {
                "name": "ExecuteTask",
                "in_type": "DelegateClassicTaskRequest",
                "out_type": "ExecuteTaskResponse"
              },
              {
                "name": "AbortTask",
                "in_type": "AbortExpireTaskRequest",
                "out_type": "AbortTaskResponse"
              },
              {
                "name": "ExpireTask",
                "in_type": "AbortExpireTaskRequest",
                "out_type": "ExpireTaskResponse"
              },
              {
                "name": "CreatePerpetualTaskClassic",
                "in_type": "CreatePerpetualTaskRequestClassic",
                "out_type": "CreatePerpetualTaskResponseClassic"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:progress.proto",
      "def": {
        "enums": [
          {
            "name": "TaskExecutionStage",
            "enum_fields": [
              {
                "name": "TYPE_UNSPECIFIED"
              },
              {
                "name": "QUEUEING",
                "integer": 1
              },
              {
                "name": "VALIDATING",
                "integer": 2
              },
              {
                "name": "EXECUTING",
                "integer": 3
              },
              {
                "name": "FINISHED",
                "integer": 4
              },
              {
                "name": "FAILED",
                "integer": 5
              },
              {
                "name": "ABORTED",
                "integer": 6
              },
              {
                "name": "PARKED",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:task.proto",
      "def": {
        "enums": [
          {
            "name": "TaskMode",
            "enum_fields": [
              {
                "name": "MODE_UNSPECIFIED"
              },
              {
                "name": "SYNC",
                "integer": 1
              },
              {
                "name": "ASYNC",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TaskId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TaskType",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "TaskSetupAbstractions",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "values",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TaskLogAbstractions",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "values",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TaskDetails",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "TaskMode"
              },
              {
                "id": 2,
                "name": "type",
                "type": "TaskType"
              },
              {
                "id": 3,
                "name": "kryo_parameters",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "execution_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 6,
                "name": "expression_functor_token",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "parked",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "expressions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TaskSelector",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              }
            ]
          },
          {
            "name": "TaskResponseData",
            "fields": [
              {
                "id": 1,
                "name": "kryo_results_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegatedetails:/:delegate_details_service.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateCountRequest",
            "fields": [
              {
                "id": 1,
                "name": "delegate_descriptor",
                "type": "DelegateDetailsDescriptor"
              }
            ]
          },
          {
            "name": "DelegateDetailsDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 3,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              }
            ]
          },
          {
            "name": "DelegateCountResponse",
            "fields": [
              {
                "id": 1,
                "name": "delegateCount",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DelegateDetailsService",
            "rpcs": [
              {
                "name": "GetDelegateCount",
                "in_type": "DelegateCountRequest",
                "out_type": "DelegateCountResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/owner/owner.proto"
          }
        ],
        "package": {
          "name": "io.harness.delegatedetails"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegateprofile:/:delegate_profile.proto",
      "def": {
        "messages": [
          {
            "name": "ProfileId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScopingValues",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProfileScopingRule",
            "fields": [
              {
                "id": 1,
                "name": "description",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "scoping_entities",
                  "type": "ScopingValues"
                }
              }
            ]
          },
          {
            "name": "ProfileSelector",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmbeddedUserDetails",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "email",
                "type": "string"
              }
            ]
          },
          {
            "name": "DelegateProfileGrpc",
            "fields": [
              {
                "id": 1,
                "name": "profile_id",
                "type": "ProfileId"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "primary",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "approval_required",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "startup_script",
                "type": "string"
              },
              {
                "id": 8,
                "name": "selectors",
                "type": "ProfileSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "scoping_rules",
                "type": "ProfileScopingRule",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "createdBy",
                "type": "EmbeddedUserDetails"
              },
              {
                "id": 11,
                "name": "lastUpdatedBy",
                "type": "EmbeddedUserDetails"
              },
              {
                "id": 12,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 13,
                "name": "numberOfDelegates",
                "type": "int64"
              },
              {
                "id": 14,
                "name": "ng",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "orgIdentifier",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 16,
                "name": "projectIdentifier",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 17,
                "name": "createdAt",
                "type": "int64"
              },
              {
                "id": 18,
                "name": "lastUpdatedAt",
                "type": "int64"
              }
            ]
          },
          {
            "name": "DelegateProfileFilterGrpc",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "approval_required",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "selectors",
                "type": "ProfileSelector",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "identifier",
                "type": "string"
              },
              {
                "id": 7,
                "name": "ng",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "orgIdentifier",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 9,
                "name": "projectIdentifier",
                "type": "owner.ProjectIdentifier"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "filterTags",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "DelegateProfilePageResponseGrpc",
            "fields": [
              {
                "id": 1,
                "name": "page_request",
                "type": "paging.PageRequestGrpc"
              },
              {
                "id": 2,
                "name": "total",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "response",
                "type": "DelegateProfileGrpc",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProfileIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/paging/paging.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/owner/owner.proto"
          }
        ],
        "package": {
          "name": "io.harness.delegateprofile"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegateprofile:/:delegate_profile_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListProfilesRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "page_request",
                "type": "paging.PageRequestGrpc"
              },
              {
                "id": 3,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 4,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 5,
                "name": "ng",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListProfilesResponse",
            "fields": [
              {
                "id": 1,
                "name": "response",
                "type": "DelegateProfilePageResponseGrpc"
              }
            ]
          },
          {
            "name": "ListProfilesRequestV2",
            "fields": [
              {
                "id": 1,
                "name": "searchTerm",
                "type": "string"
              },
              {
                "id": 2,
                "name": "filterProperties",
                "type": "DelegateProfileFilterGrpc"
              },
              {
                "id": 3,
                "name": "page_request",
                "type": "paging.PageRequestGrpc"
              }
            ]
          },
          {
            "name": "GetProfileRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "ProfileId"
              }
            ]
          },
          {
            "name": "GetProfileV2Request",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 3,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 4,
                "name": "profile_identifier",
                "type": "ProfileIdentifier"
              }
            ]
          },
          {
            "name": "GetProfileResponse",
            "fields": [
              {
                "id": 1,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "AddProfileRequest",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "AddProfileResponse",
            "fields": [
              {
                "id": 1,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "UpdateProfileRequest",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "UpdateProfileResponse",
            "fields": [
              {
                "id": 1,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "DeleteProfileRequest",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 3,
                "name": "profile_id",
                "type": "ProfileId"
              }
            ]
          },
          {
            "name": "DeleteProfileV2Request",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 3,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 4,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 5,
                "name": "profile_identifier",
                "type": "ProfileIdentifier"
              }
            ]
          },
          {
            "name": "DeleteProfileResponse"
          },
          {
            "name": "UpdateProfileScopingRulesRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "ProfileId"
              },
              {
                "id": 3,
                "name": "scoping_rules",
                "type": "ProfileScopingRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateProfileScopingRulesResponse",
            "fields": [
              {
                "id": 1,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "UpdateProfileSelectorsRequest",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 3,
                "name": "profile_id",
                "type": "ProfileId"
              },
              {
                "id": 4,
                "name": "selectors",
                "type": "ProfileSelector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateProfileSelectorsV2Request",
            "fields": [
              {
                "id": 1,
                "name": "virtual_stack",
                "type": "io.harness.virtualstack.VirtualStackRequest"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 3,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 4,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 5,
                "name": "profile_identifier",
                "type": "ProfileIdentifier"
              },
              {
                "id": 6,
                "name": "selectors",
                "type": "ProfileSelector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateProfileSelectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "profile",
                "type": "DelegateProfileGrpc"
              }
            ]
          },
          {
            "name": "UpdateProfileScopingRulesV2Request",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "delegate.AccountId"
              },
              {
                "id": 2,
                "name": "org_id",
                "type": "owner.OrgIdentifier"
              },
              {
                "id": 3,
                "name": "project_id",
                "type": "owner.ProjectIdentifier"
              },
              {
                "id": 4,
                "name": "profile_identifier",
                "type": "ProfileIdentifier"
              },
              {
                "id": 5,
                "name": "scoping_rules",
                "type": "ProfileScopingRule",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DelegateProfileService",
            "rpcs": [
              {
                "name": "ListProfiles",
                "in_type": "ListProfilesRequest",
                "out_type": "ListProfilesResponse"
              },
              {
                "name": "ListProfilesV2",
                "in_type": "ListProfilesRequestV2",
                "out_type": "ListProfilesResponse"
              },
              {
                "name": "GetProfile",
                "in_type": "GetProfileRequest",
                "out_type": "GetProfileResponse"
              },
              {
                "name": "AddProfile",
                "in_type": "AddProfileRequest",
                "out_type": "AddProfileResponse"
              },
              {
                "name": "UpdateProfile",
                "in_type": "UpdateProfileRequest",
                "out_type": "UpdateProfileResponse"
              },
              {
                "name": "DeleteProfile",
                "in_type": "DeleteProfileRequest",
                "out_type": "DeleteProfileResponse"
              },
              {
                "name": "UpdateProfileScopingRules",
                "in_type": "UpdateProfileScopingRulesRequest",
                "out_type": "UpdateProfileScopingRulesResponse"
              },
              {
                "name": "UpdateProfileSelectors",
                "in_type": "UpdateProfileSelectorsRequest",
                "out_type": "UpdateProfileSelectorsResponse"
              },
              {
                "name": "GetProfileV2",
                "in_type": "GetProfileV2Request",
                "out_type": "GetProfileResponse"
              },
              {
                "name": "UpdateProfileScopingRulesV2",
                "in_type": "UpdateProfileScopingRulesV2Request",
                "out_type": "UpdateProfileScopingRulesResponse"
              },
              {
                "name": "DeleteProfileV2",
                "in_type": "DeleteProfileV2Request",
                "out_type": "DeleteProfileResponse"
              },
              {
                "name": "UpdateProfileSelectorsV2",
                "in_type": "UpdateProfileSelectorsV2Request",
                "out_type": "UpdateProfileSelectorsResponse"
              },
              {
                "name": "UpdateProfileV2",
                "in_type": "UpdateProfileRequest",
                "out_type": "UpdateProfileResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/delegateprofile/delegate_profile.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/paging/paging.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/owner/owner.proto"
          },
          {
            "path": "980-commons/src/main/proto/io/harness/virtualstack/virtual_stack.proto"
          }
        ],
        "package": {
          "name": "io.harness.delegateprofile"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:owner:/:owner.proto",
      "def": {
        "messages": [
          {
            "name": "OrgIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProjectIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.owner"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:paging:/:paging.proto",
      "def": {
        "messages": [
          {
            "name": "PageRequestGrpc",
            "fields": [
              {
                "id": 1,
                "name": "offset",
                "type": "string"
              },
              {
                "id": 3,
                "name": "limit",
                "type": "string"
              },
              {
                "id": 7,
                "name": "fieldsIncluded",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "fieldsExcluded",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.paging"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:perpetual_task_client.proto",
      "def": {
        "messages": [
          {
            "name": "TaskClientParams",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "params",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PerpetualTaskClientContextDetails",
            "fields": [
              {
                "id": 1,
                "name": "task_client_params",
                "type": "TaskClientParams"
              },
              {
                "id": 2,
                "name": "execution_bundle",
                "type": "PerpetualTaskExecutionBundle"
              },
              {
                "id": 3,
                "name": "last_context_updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PerpetualTaskClientEntrypoint",
            "fields": [
              {
                "id": 1,
                "name": "https_entrypoint",
                "type": "callback.HttpsClientEntrypoint"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "920-delegate-service-beans/src/main/proto/io/harness/callback/http_entrypoint.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/perpetualtask/perpetual_task.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:perpetual_task_client_service.proto",
      "def": {
        "messages": [
          {
            "name": "ObtainTaskCapabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "PerpetualTaskId"
              }
            ]
          },
          {
            "name": "ObtainTaskCapabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "capabilities",
                "type": "delegate.Capability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ObtainTaskExecutionParamsRequest",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "PerpetualTaskId"
              }
            ]
          },
          {
            "name": "ObtainTaskExecutionParamsResponse",
            "fields": [
              {
                "id": 1,
                "name": "customized_params",
                "type": "google.protobuf.Any"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PerpetualTaskClientService",
            "rpcs": [
              {
                "name": "ObtainTaskCapabilities",
                "in_type": "ObtainTaskCapabilitiesRequest",
                "out_type": "ObtainTaskCapabilitiesResponse"
              },
              {
                "name": "ObtainTaskExecutionParams",
                "in_type": "ObtainTaskExecutionParamsRequest",
                "out_type": "ObtainTaskExecutionParamsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/capability.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/perpetualtask/perpetual_task.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "920_delegate_service_beans"
          }
        ]
      }
    },
    {
      "protopath": "920-delegate-service-beans:/:src:/:main:/:proto:/:io:/:harness:/:pingpong:/:delegate_service_ping_pong.proto",
      "def": {
        "messages": [
          {
            "name": "PingDelegateService",
            "fields": [
              {
                "id": 1,
                "name": "delegate_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ping_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "PongDelegateService"
          }
        ],
        "services": [
          {
            "name": "DelegateServicePingPong",
            "rpcs": [
              {
                "name": "TryPing",
                "in_type": "PingDelegateService",
                "out_type": "PongDelegateService"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.pingpong"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "930-delegate-tasks:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:perpetual_task_execution.proto",
      "def": {
        "messages": [
          {
            "name": "PerpetualTaskExecutionParams",
            "fields": [
              {
                "id": 1,
                "name": "customized_params",
                "type": "google.protobuf.Any"
              }
            ]
          },
          {
            "name": "PerpetualTaskAssignDetails",
            "fields": [
              {
                "id": 1,
                "name": "task_id",
                "type": "PerpetualTaskId"
              },
              {
                "id": 2,
                "name": "last_context_updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PerpetualTaskExecutionContext",
            "fields": [
              {
                "id": 1,
                "name": "task_params",
                "type": "PerpetualTaskExecutionParams"
              },
              {
                "id": 2,
                "name": "task_schedule",
                "type": "PerpetualTaskSchedule"
              },
              {
                "id": 3,
                "name": "heartbeat_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/perpetualtask/perpetual_task.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "930_delegate_tasks"
          }
        ]
      }
    },
    {
      "protopath": "930-delegate-tasks:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:perpetual_task_service.proto",
      "def": {
        "messages": [
          {
            "name": "PerpetualTaskListRequest",
            "fields": [
              {
                "id": 1,
                "name": "delegate_id",
                "type": "delegate.DelegateId"
              }
            ]
          },
          {
            "name": "PerpetualTaskListResponse",
            "fields": [
              {
                "id": 1,
                "name": "perpetual_task_assign_details",
                "type": "PerpetualTaskAssignDetails",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PerpetualTaskContextRequest",
            "fields": [
              {
                "id": 1,
                "name": "perpetual_task_id",
                "type": "PerpetualTaskId"
              }
            ]
          },
          {
            "name": "PerpetualTaskContextResponse",
            "fields": [
              {
                "id": 1,
                "name": "perpetual_task_context",
                "type": "PerpetualTaskExecutionContext"
              }
            ]
          },
          {
            "name": "HeartbeatRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "heartbeat_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "response_code",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "response_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "HeartbeatResponse"
          }
        ],
        "services": [
          {
            "name": "PerpetualTaskService",
            "rpcs": [
              {
                "name": "PerpetualTaskList",
                "in_type": "PerpetualTaskListRequest",
                "out_type": "PerpetualTaskListResponse"
              },
              {
                "name": "PerpetualTaskContext",
                "in_type": "PerpetualTaskContextRequest",
                "out_type": "PerpetualTaskContextResponse"
              },
              {
                "name": "Heartbeat",
                "in_type": "HeartbeatRequest",
                "out_type": "HeartbeatResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "930-delegate-tasks/src/main/proto/io/harness/perpetualtask/perpetual_task_execution.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/delegate.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/perpetualtask/perpetual_task.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "930_delegate_tasks"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:capability:/:capability.proto",
      "def": {
        "enums": [
          {
            "name": "HelmInstallationParameters.HelmVersion",
            "enum_fields": [
              {
                "name": "HELM_VERSION_UNSPECIFIED"
              },
              {
                "name": "V2",
                "integer": 1
              },
              {
                "name": "V3",
                "integer": 2
              },
              {
                "name": "V380",
                "integer": 3
              }
            ]
          },
          {
            "name": "PcfAutoScalarParameters.CfCliVersion",
            "enum_fields": [
              {
                "name": "CF_VERSION_UNSPECIFIED"
              },
              {
                "name": "V6",
                "integer": 1
              },
              {
                "name": "V7",
                "integer": 2
              }
            ]
          },
          {
            "name": "PcfInstallationParameters.CfCliVersion",
            "enum_fields": [
              {
                "name": "CF_VERSION_UNSPECIFIED"
              },
              {
                "name": "V6",
                "integer": 1
              },
              {
                "name": "V7",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CapabilityParameters",
            "fields": [
              {
                "id": 4,
                "name": "aws_region_parameters",
                "type": "AwsRegionParameters"
              },
              {
                "id": 5,
                "name": "chart_museum_parameters",
                "type": "ChartMuseumParameters"
              },
              {
                "id": 11,
                "name": "git_installation_parameters",
                "type": "GitInstallationParameters"
              },
              {
                "id": 10,
                "name": "helm_installation_parameters",
                "type": "HelmInstallationParameters"
              },
              {
                "id": 6,
                "name": "http_connection_parameters",
                "type": "HttpConnectionParameters"
              },
              {
                "id": 13,
                "name": "kustomize_parameters",
                "type": "KustomizeParameters"
              },
              {
                "id": 14,
                "name": "pcf_auto_scalar_parameters",
                "type": "PcfAutoScalarParameters"
              },
              {
                "id": 15,
                "name": "pcf_connectivity_parameters",
                "type": "PcfConnectivityParameters"
              },
              {
                "id": 18,
                "name": "pcf_installation_parameters",
                "type": "PcfInstallationParameters"
              },
              {
                "id": 19,
                "name": "ci_vm_parameters",
                "type": "CIVMParameters"
              },
              {
                "id": 7,
                "name": "process_executor_parameters",
                "type": "ProcessExecutorParameters"
              },
              {
                "id": 3,
                "name": "sftp_capability_parameters",
                "type": "SftpCapabilityParameters"
              },
              {
                "id": 2,
                "name": "smb_connection_parameters",
                "type": "SmbConnectionParameters"
              },
              {
                "id": 12,
                "name": "smtp_parameters",
                "type": "SmtpParameters"
              },
              {
                "id": 8,
                "name": "socket_connectivity_parameters",
                "type": "SocketConnectivityParameters"
              },
              {
                "id": 20,
                "name": "socket_connectivity_bulk_or_parameters",
                "type": "SocketConnectivityBulkOrParameters"
              },
              {
                "id": 9,
                "name": "system_env_parameters",
                "type": "SystemEnvParameters"
              },
              {
                "id": 1,
                "name": "testing_capability",
                "type": "TestingCapability"
              },
              {
                "id": 16,
                "name": "winrm_host_validation_parameters",
                "type": "WinrmHostValidationParameters"
              },
              {
                "id": 17,
                "name": "lite_engine_connection_parameters",
                "type": "LiteEngineConnectionParameters"
              }
            ]
          },
          {
            "name": "AwsRegionParameters",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              }
            ]
          },
          {
            "name": "ChartMuseumParameters"
          },
          {
            "name": "GitInstallationParameters"
          },
          {
            "name": "HttpConnectionParameters",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "headers",
                "type": "Header",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Header",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProcessExecutorParameters",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SftpCapabilityParameters",
            "fields": [
              {
                "id": 1,
                "name": "sftp_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "SmbConnectionParameters",
            "fields": [
              {
                "id": 1,
                "name": "smb_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "HelmInstallationParameters",
            "fields": [
              {
                "id": 1,
                "name": "helm_version",
                "type": "HelmVersion"
              }
            ]
          },
          {
            "name": "SmtpParameters",
            "fields": [
              {
                "id": 1,
                "name": "use_ssl",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "start_tls",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "host",
                "type": "string"
              },
              {
                "id": 4,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "username",
                "type": "string"
              }
            ]
          },
          {
            "name": "SocketConnectivityParameters",
            "fields": [
              {
                "id": 1,
                "name": "host_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "SocketConnectivityBulkOrParameters",
            "fields": [
              {
                "id": 1,
                "name": "host_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              }
            ]
          },
          {
            "name": "SystemEnvParameters",
            "fields": [
              {
                "id": 1,
                "name": "property",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comparate",
                "type": "string"
              }
            ]
          },
          {
            "name": "KustomizeParameters",
            "fields": [
              {
                "id": 1,
                "name": "plugin_root_dir",
                "type": "string"
              }
            ]
          },
          {
            "name": "PcfAutoScalarParameters",
            "fields": [
              {
                "id": 1,
                "name": "cf_cli_version",
                "type": "CfCliVersion"
              }
            ]
          },
          {
            "name": "PcfConnectivityParameters",
            "fields": [
              {
                "id": 1,
                "name": "endpoint_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "PcfInstallationParameters",
            "fields": [
              {
                "id": 1,
                "name": "cf_cli_version",
                "type": "CfCliVersion"
              }
            ]
          },
          {
            "name": "TestingCapability"
          },
          {
            "name": "WinrmHostValidationParameters",
            "fields": [
              {
                "id": 4,
                "name": "hostname",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "use_ssl",
                "type": "bool"
              },
              {
                "id": 1,
                "name": "domain",
                "type": "string"
              }
            ]
          },
          {
            "name": "LiteEngineConnectionParameters",
            "fields": [
              {
                "id": 1,
                "name": "ip",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "is_local",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CIVMParameters",
            "fields": [
              {
                "id": 1,
                "name": "pool_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.capability"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "240_capability"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:artifact:/:artifact_collection_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "ArtifactCollectionTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "artifact_stream_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_source_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.artifact"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:connector:/:connector_heartbeat_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "ConnectorHeartbeatTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_identifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "org_identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "project_identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "connector_identifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "connector_validation_parameter_response",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.connector"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:datacollection:/:data_collection_task.proto",
      "def": {
        "messages": [
          {
            "name": "DataCollectionPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_collection_worker_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_collection_info",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.datacollection"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:datacollection:/:k8_activity_collection_task.proto",
      "def": {
        "messages": [
          {
            "name": "K8ActivityCollectionPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_collection_worker_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_collection_info",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.datacollection"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:ecs:/:ecs_task.proto",
      "def": {
        "messages": [
          {
            "name": "EcsPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "region",
                "type": "string"
              },
              {
                "id": 3,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "encryption_detail",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "setting_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.ecs"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:example:/:sample_task.proto",
      "def": {
        "messages": [
          {
            "name": "SamplePerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "country",
                "type": "string"
              },
              {
                "id": 2,
                "name": "population",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.example"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:https:/:https_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "HttpsPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "task_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.https"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:aws_ami_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AwsAmiInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "asg_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:aws_code_deploy_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AwsCodeDeployInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:aws_lambda_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AwsLambdaInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "encrypted_data",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "region",
                "type": "string"
              },
              {
                "id": 4,
                "name": "function_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "qualifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "start_date",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:aws_ssh_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AwsSshInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:azure_vmss_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AzureVmssInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "subscription_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource_group_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vmss_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "azure_config",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "azure_encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:azure_web_app_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "AzureWebAppInstanceSyncPerpetualProtoTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "azure_config",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "azure_encrypted_data",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "subscription_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_group_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "app_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "slot_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:container_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "K8sContainerInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "app_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "k8s_cluster_config",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "release_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerServicePerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "setting_attribute",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "container_svc_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "encryption_details",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "region",
                "type": "string"
              },
              {
                "id": 7,
                "name": "subscription_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "resource_group",
                "type": "string"
              },
              {
                "id": 9,
                "name": "master_url",
                "type": "string"
              },
              {
                "id": 10,
                "name": "release_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "container_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "k8s_container_perpetual_task_params",
                "type": "K8sContainerInstanceSyncPerpetualTaskParams"
              },
              {
                "id": 3,
                "name": "container_service_perpetual_task_params",
                "type": "ContainerServicePerpetualTaskParams"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:custom_deployment_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "CustomDeploymentInstanceSyncTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "app_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "script",
                "type": "string"
              },
              {
                "id": 4,
                "name": "output_path_key",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:k8s_instance_sync_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "K8sInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "k8s_deployment_release_list",
                "type": "K8sDeploymentRelease",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "K8sDeploymentRelease",
            "fields": [
              {
                "id": 1,
                "name": "k8s_infra_delegate_config",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "release_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:native_helm_instance_sync_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "NativeHelmInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_release_list",
                "type": "NativeHelmDeploymentRelease",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "helm_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "NativeHelmDeploymentRelease",
            "fields": [
              {
                "id": 1,
                "name": "k8s_infra_delegate_config",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "release_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "helm_chart_info",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:pcf_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "PcfInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "infra_mapping_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "application_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "org_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "space",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pcf_config",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:pdc_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "PdcInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "host_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "setting_attribute",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:instancesync:/:spotinst_ami_instance_sync_perpetual_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "SpotinstAmiInstanceSyncPerpetualTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "elastigroup_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "aws_config",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "spotinst_config",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "aws_encrypted_data",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "spotinst_encrypted_data",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.instancesync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:k8s:/:watch:/:k8s_messages.proto",
      "def": {
        "enums": [
          {
            "name": "Volume.VolumeType",
            "enum_fields": [
              {
                "name": "VOLUME_TYPE_UNSPECIFIED"
              },
              {
                "name": "VOLUME_TYPE_PVC",
                "integer": 1
              }
            ]
          },
          {
            "name": "PodEvent.EventType",
            "enum_fields": [
              {
                "name": "EVENT_TYPE_UNSPECIFIED"
              },
              {
                "name": "EVENT_TYPE_SCHEDULED",
                "integer": 1
              },
              {
                "name": "EVENT_TYPE_TERMINATED",
                "integer": 2
              }
            ]
          },
          {
            "name": "PVInfo.PVType",
            "enum_fields": [
              {
                "name": "PV_TYPE_UNSPECIFIED"
              },
              {
                "name": "PV_TYPE_GCE_PERSISTENT_DISK",
                "integer": 1
              },
              {
                "name": "PV_TYPE_AWS_EBS",
                "integer": 2
              },
              {
                "name": "PV_TYPE_AZURE_DISK",
                "integer": 3
              },
              {
                "name": "PV_TYPE_NFS",
                "integer": 4
              }
            ]
          },
          {
            "name": "PVEvent.EventType",
            "enum_fields": [
              {
                "name": "EVENT_TYPE_UNSPECIFIED"
              },
              {
                "name": "EVENT_TYPE_START",
                "integer": 1
              },
              {
                "name": "EVENT_TYPE_STOP",
                "integer": 2
              },
              {
                "name": "EVENT_TYPE_EXPANSION",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeEvent.EventType",
            "enum_fields": [
              {
                "name": "EVENT_TYPE_UNSPECIFIED"
              },
              {
                "name": "EVENT_TYPE_START",
                "integer": 1
              },
              {
                "name": "EVENT_TYPE_STOP",
                "integer": 2
              }
            ]
          },
          {
            "name": "K8sWatchEvent.Type",
            "enum_fields": [
              {
                "name": "TYPE_UNSPECIFIED"
              },
              {
                "name": "TYPE_ADDED",
                "integer": 1
              },
              {
                "name": "TYPE_UPDATED",
                "integer": 2
              },
              {
                "name": "TYPE_DELETED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Quantity",
            "fields": [
              {
                "id": 1,
                "name": "amount",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "unit",
                "type": "string"
              }
            ]
          },
          {
            "name": "Resource",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "requests",
                  "type": "Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "limits",
                  "type": "Quantity"
                }
              }
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resource",
                "type": "Resource"
              }
            ]
          },
          {
            "name": "Owner",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "replicas",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "VolumeType"
              },
              {
                "id": 2,
                "name": "request",
                "type": "Quantity"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PodInfo",
            "fields": [
              {
                "id": 2,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "total_resource",
                "type": "Resource"
              },
              {
                "id": 8,
                "name": "creation_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "top_level_owner",
                "type": "Owner"
              },
              {
                "id": 12,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 14,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 15,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 16,
                "name": "qos_class",
                "type": "string"
              },
              {
                "id": 17,
                "name": "volume",
                "type": "Volume",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 18,
                  "name": "namespace_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "metadata_annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PodEvent",
            "fields": [
              {
                "id": 2,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "EventType"
              },
              {
                "id": 5,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "kube_system_uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "PVInfo",
            "fields": [
              {
                "id": 2,
                "name": "pv_type",
                "type": "PVType"
              },
              {
                "id": 4,
                "name": "creation_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "claim_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "claim_namespace",
                "type": "string"
              },
              {
                "id": 7,
                "name": "pv_uid",
                "type": "string"
              },
              {
                "id": 8,
                "name": "pv_name",
                "type": "string"
              },
              {
                "id": 9,
                "name": "reclaim_policy",
                "type": "string"
              },
              {
                "id": 10,
                "name": "storage_class_type",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 11,
                "name": "status",
                "type": "string"
              },
              {
                "id": 12,
                "name": "capacity",
                "type": "Quantity"
              },
              {
                "id": 14,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 15,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 16,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 17,
                "name": "kube_system_uid",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 18,
                  "name": "storage_class_params",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PVEvent",
            "fields": [
              {
                "id": 2,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pv_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "event_type",
                "type": "EventType"
              },
              {
                "id": 5,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "pv_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "kube_system_uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeInfo",
            "fields": [
              {
                "id": 2,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "creation_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 10,
                "name": "provider_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "kube_system_uid",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "allocatable_resource",
                  "type": "Quantity"
                }
              }
            ]
          },
          {
            "name": "NodeEvent",
            "fields": [
              {
                "id": 2,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "EventType"
              },
              {
                "id": 5,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "kube_system_uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "K8SClusterSyncEvent",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "active_pod_uids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "active_node_uids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "last_processed_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 8,
                "name": "active_pv_uids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "version",
                "type": "int32"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "active_pod_uids_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 11,
                  "name": "active_node_uids_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "active_pv_uids_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "K8sObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string"
              },
              {
                "id": 5,
                "name": "resource_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "K8sClusterEvent",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 5,
                "name": "message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "source_component",
                "type": "string"
              },
              {
                "id": 7,
                "name": "involved_object",
                "type": "K8sObjectReference"
              },
              {
                "id": 8,
                "name": "kube_system_uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "K8sWatchEvent",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 5,
                "name": "resource_ref",
                "type": "K8sObjectReference"
              },
              {
                "id": 6,
                "name": "old_resource_version",
                "type": "string"
              },
              {
                "id": 7,
                "name": "old_resource_yaml",
                "type": "string"
              },
              {
                "id": 8,
                "name": "new_resource_version",
                "type": "string"
              },
              {
                "id": 9,
                "name": "new_resource_yaml",
                "type": "string"
              },
              {
                "id": 10,
                "name": "description",
                "type": "string"
              },
              {
                "id": 11,
                "name": "kube_system_uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "K8sWorkloadSpec",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 5,
                "name": "workload_kind",
                "type": "string"
              },
              {
                "id": 6,
                "name": "workload_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 8,
                "name": "container_specs",
                "type": "ContainerSpec",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "init_container_specs",
                "type": "ContainerSpec",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "replicas",
                "type": "int64"
              },
              {
                "id": 11,
                "name": "uid",
                "type": "string"
              },
              {
                "id": 12,
                "name": "version",
                "type": "int32"
              }
            ],
            "messages": [
              {
                "name": "ContainerSpec",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "requests",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "limits",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.k8s.watch"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:k8s:/:watch:/:k8s_watch.proto",
      "def": {
        "messages": [
          {
            "name": "K8sWatchTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "k8s_cluster_config",
                "type": "bytes",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "k8s_cluster_info",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.k8s.watch"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:manifest:/:manifest_collection_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "ManifestCollectionTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "app_manifest_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "manifest_collection_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.manifest"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:polling:/:artifact_collection_task_params_ng.proto",
      "def": {
        "messages": [
          {
            "name": "ArtifactCollectionTaskParamsNg",
            "fields": [
              {
                "id": 2,
                "name": "polling_doc_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "artifact_collection_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.polling"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:polling:/:manifest_collection_task_params_ng.proto",
      "def": {
        "messages": [
          {
            "name": "ManifestCollectionTaskParamsNg",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "polling_doc_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "manifest_collection_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.polling"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-delegate-tasks-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:polling:/:polling_task_params.proto",
      "def": {
        "messages": [
          {
            "name": "PollingTaskParams",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "polling_doc_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "manifest_collection_params",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask.polling"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "950-wait-engine:/:src:/:proto:/:io:/:harness:/:waiter:/:notify_event.proto",
      "def": {
        "messages": [
          {
            "name": "NotifyEventProto",
            "fields": [
              {
                "id": 1,
                "name": "waitInstanceId",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.waiter.notify"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "950_wait_engine"
          }
        ]
      }
    },
    {
      "protopath": "952-remote-observers:/:src:/:main:/:proto:/:io:/:harness:/:observer:/:observer.proto",
      "def": {
        "messages": [
          {
            "name": "Informant",
            "fields": [
              {
                "id": 1,
                "name": "method_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "informant0",
                "type": "Informant0"
              },
              {
                "id": 3,
                "name": "informant1",
                "type": "Informant1"
              },
              {
                "id": 4,
                "name": "informant2",
                "type": "Informant2"
              },
              {
                "id": 5,
                "name": "informant3",
                "type": "Informant3"
              },
              {
                "id": 6,
                "name": "informant4",
                "type": "Informant4"
              }
            ]
          },
          {
            "name": "Informant0"
          },
          {
            "name": "Informant1",
            "fields": [
              {
                "id": 1,
                "name": "param1",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "type1",
                "type": "string"
              }
            ]
          },
          {
            "name": "Informant2",
            "fields": [
              {
                "id": 1,
                "name": "param1",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "param2",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "type1",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type2",
                "type": "string"
              }
            ]
          },
          {
            "name": "Informant3",
            "fields": [
              {
                "id": 1,
                "name": "param1",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "param2",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "param3",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "type1",
                "type": "string"
              },
              {
                "id": 5,
                "name": "type2",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type3",
                "type": "string"
              }
            ]
          },
          {
            "name": "Informant4",
            "fields": [
              {
                "id": 1,
                "name": "param1",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "param2",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "param3",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "param4",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "type1",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type2",
                "type": "string"
              },
              {
                "id": 7,
                "name": "type3",
                "type": "string"
              },
              {
                "id": 8,
                "name": "type4",
                "type": "string"
              }
            ]
          },
          {
            "name": "Response"
          }
        ],
        "services": [
          {
            "name": "RemoteObserver",
            "rpcs": [
              {
                "name": "observer",
                "in_type": "Informant",
                "out_type": "Response"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.observer"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "952_remote_observers"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:consumer:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "Message",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "message",
                "type": "io.harness.eventsframework.producer.Message"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "953-events-api/src/main/proto/io/harness/eventsframework/producer/message.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.consumer"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:producer:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "Message",
            "fields": [
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.producer"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:cv:/:srm_statemachine_trigger.proto",
      "def": {
        "messages": [
          {
            "name": "StateMachineTrigger",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "verificationTaskId",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.cv"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:deployment:/:deployment_event.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEventDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "projectIdentifier",
                "type": "string"
              },
              {
                "id": 4,
                "name": "serviceIdentifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "environmentIdentifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "executionDetails",
                "type": "ExecutionDetails"
              },
              {
                "id": 7,
                "name": "artifactDetails",
                "type": "ArtifactDetails"
              },
              {
                "id": 8,
                "name": "deploymentStatus",
                "type": "string"
              },
              {
                "id": 9,
                "name": "deploymentStartTime",
                "type": "int64"
              },
              {
                "id": 10,
                "name": "deploymentEndTime",
                "type": "int64"
              }
            ]
          },
          {
            "name": "ExecutionDetails",
            "fields": [
              {
                "id": 1,
                "name": "planExecutionId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "stageSetupId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pipelineId",
                "type": "string"
              },
              {
                "id": 4,
                "name": "stageId",
                "type": "string"
              }
            ]
          },
          {
            "name": "ArtifactDetails",
            "fields": [
              {
                "id": 1,
                "name": "artifactType",
                "type": "string"
              },
              {
                "id": 2,
                "name": "artifactTag",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.deployment"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:account:/:account.proto",
      "def": {
        "messages": [
          {
            "name": "AccountEntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud.account"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:apikey:/:apikey.proto",
      "def": {
        "messages": [
          {
            "name": "ApiKeyEntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "projectIdentifier",
                "type": "string"
              },
              {
                "id": 4,
                "name": "apiKeyType",
                "type": "string"
              },
              {
                "id": 5,
                "name": "parentIdentifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud.apikey"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:entity.proto",
      "def": {
        "messages": [
          {
            "name": "EntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 2,
                "name": "accountIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "orgIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "projectIdentifier",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:organization:/:organization.proto",
      "def": {
        "messages": [
          {
            "name": "OrganizationEntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud.organization"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:project:/:project.proto",
      "def": {
        "messages": [
          {
            "name": "ProjectEntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud.project"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:resourcegroup:/:resourcegroup.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceGroupEntityChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 3,
                "name": "projectIdentifier",
                "type": "string"
              },
              {
                "id": 4,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.entity_crud.resourcegroup"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity_crud:/:user:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "UserDTO",
            "fields": [
              {
                "id": 2,
                "name": "userId",
                "type": "string"
              },
              {
                "id": 5,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "email",
                "type": "string"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.user"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entityactivity:/:create_entity_activity.proto",
      "def": {
        "messages": [
          {
            "name": "EntityActivityCreateDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "referredEntity",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "status",
                "type": "string"
              },
              {
                "id": 5,
                "name": "activityTime",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "errorMessage",
                "type": "string"
              },
              {
                "id": 8,
                "name": "connectivityDetail",
                "type": "ConnectivityCheckActivityDetailProtoDTO"
              },
              {
                "id": 9,
                "name": "entityUsageDetail",
                "type": "EntityUsageActivityDetailProtoDTO"
              }
            ],
            "messages": [
              {
                "name": "ConnectivityCheckActivityDetailProtoDTO",
                "fields": [
                  {
                    "id": 1,
                    "name": "connectorValidationResult",
                    "type": "ConnectorValidationResultProto"
                  }
                ]
              },
              {
                "name": "EntityUsageActivityDetailProtoDTO",
                "fields": [
                  {
                    "id": 1,
                    "name": "referredByEntity",
                    "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
                  },
                  {
                    "id": 2,
                    "name": "activityStatusMessage",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "errors",
                    "type": "ErrorDetailProto",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "errorSummary",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "status",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "ConnectorValidationResultProto",
                "fields": [
                  {
                    "id": 1,
                    "name": "status",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "errors",
                    "type": "ErrorDetailProto",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "errorSummary",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "testedAt",
                    "type": "int64"
                  },
                  {
                    "id": 5,
                    "name": "delegateId",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "ErrorDetailProto",
                "fields": [
                  {
                    "id": 1,
                    "name": "reason",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "code",
                    "type": "int32"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entityactivity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entitysetupusage:/:create_entity_setup_usage.proto",
      "def": {
        "messages": [
          {
            "name": "EntitySetupUsageCreateDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "referredEntity",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 3,
                "name": "referredByEntity",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 4,
                "name": "createdAt",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entitysetupusage"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entitysetupusage:/:create_entity_setup_usage_v2.proto",
      "def": {
        "messages": [
          {
            "name": "EntitySetupUsageCreateV2DTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "referredEntities",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "referredByEntity",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 4,
                "name": "createdAt",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "deleteOldReferredByRecords",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "referredEntityWithSetupUsageDetail",
                "type": "io.harness.eventsframework.schemas.entitysetupusage.EntityDetailWithSetupUsageDetailProtoDTO",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          },
          {
            "path": "953-events-api/src/main/proto/io/harness/eventsframework/schemas/entitysetupusage/entity_detail_with_setup_usage_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entitysetupusage"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entitysetupusage:/:delete_setup_usage.proto",
      "def": {
        "messages": [
          {
            "name": "DeleteSetupUsageDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "referredEntityFQN",
                "type": "string"
              },
              {
                "id": 3,
                "name": "referredByEntityFQN",
                "type": "string"
              },
              {
                "id": 4,
                "name": "referredEntityType",
                "type": "io.harness.eventsframework.schemas.entity.EntityTypeProtoEnum"
              },
              {
                "id": 5,
                "name": "referredByEntityType",
                "type": "io.harness.eventsframework.schemas.entity.EntityTypeProtoEnum"
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_type.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entitysetupusage"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entitysetupusage:/:entity_detail_with_setup_usage_detail.proto",
      "def": {
        "enums": [
          {
            "name": "EntityDetailWithSetupUsageDetailProtoDTO.PipelineDetailType",
            "enum_fields": [
              {
                "name": "STAGE_IDENTIFIER"
              },
              {
                "name": "VARIABLE_NAME",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EntityDetailWithSetupUsageDetailProtoDTO",
            "fields": [
              {
                "id": 1,
                "name": "referredEntity",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secretConnectorDetail",
                "type": "SecretReferredByConnectorSetupUsageDetailProtoDTO"
              },
              {
                "id": 4,
                "name": "entityInPipelineDetail",
                "type": "EntityReferredByPipelineDetailProtoDTO"
              }
            ],
            "messages": [
              {
                "name": "SecretReferredByConnectorSetupUsageDetailProtoDTO",
                "fields": [
                  {
                    "id": 1,
                    "name": "fieldName",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "EntityReferredByPipelineDetailProtoDTO",
                "fields": [
                  {
                    "id": 1,
                    "name": "identifier",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "type",
                    "type": "PipelineDetailType"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entitysetupusage"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:featureflag:/:featureflag.proto",
      "def": {
        "messages": [
          {
            "name": "FeatureFlagChangeDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "featureName",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enable",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.featureflag"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:instancestatstimeseriesevent:/:create_timeseries_batch_event_info.proto",
      "def": {
        "messages": [
          {
            "name": "TimeseriesBatchEventInfo",
            "fields": [
              {
                "id": 1,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "dataPointList",
                "type": "DataPoint",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DataPoint",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "data",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.instancestatstimeseriesevent"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:samlauthorization:/:samlauthorizationdata.proto",
      "def": {
        "messages": [
          {
            "name": "SamlAuthorizationDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ssoId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "email",
                "type": "string"
              },
              {
                "id": 4,
                "name": "userGroups",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.samlauthorization.samlauthorizationdata"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:usermembership:/:usermembership.proto",
      "def": {
        "messages": [
          {
            "name": "UserMembershipDTO",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "string"
              },
              {
                "id": 2,
                "name": "userId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "Scope"
              }
            ]
          },
          {
            "name": "Scope",
            "fields": [
              {
                "id": 4,
                "name": "accountIdentifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "orgIdentifier",
                "type": "string"
              },
              {
                "id": 6,
                "name": "projectIdentifier",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.usermembership"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-events-api:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:webhookpayloads:/:webhookdata.proto",
      "def": {
        "enums": [
          {
            "name": "WebhookEventType",
            "enum_fields": [
              {
                "name": "PUSH"
              },
              {
                "name": "PR",
                "integer": 1
              },
              {
                "name": "ISSUE_COMMENT",
                "integer": 2
              },
              {
                "name": "CREATE_BRANCH",
                "integer": 3
              },
              {
                "name": "DELETE_BRANCH",
                "integer": 4
              }
            ]
          },
          {
            "name": "WebhookTriggerType",
            "enum_fields": [
              {
                "name": "GIT"
              },
              {
                "name": "CUSTOM",
                "integer": 1
              }
            ]
          },
          {
            "name": "SourceRepoType",
            "enum_fields": [
              {
                "name": "GITHUB"
              },
              {
                "name": "GITLAB",
                "integer": 1
              },
              {
                "name": "BITBUCKET",
                "integer": 2
              },
              {
                "name": "AWS_CODECOMMIT",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "WebhookDTO",
            "fields": [
              {
                "id": 1,
                "name": "jsonPayload",
                "type": "string"
              },
              {
                "id": 2,
                "name": "webhookTriggerType",
                "type": "WebhookTriggerType"
              },
              {
                "id": 3,
                "name": "webhookEventType",
                "type": "WebhookEventType"
              },
              {
                "id": 4,
                "name": "parsedResponse",
                "type": "product.ci.scm.proto.ParseWebhookResponse"
              },
              {
                "id": 5,
                "name": "headers",
                "type": "EventHeader",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "gitDetails",
                "type": "GitDetails"
              },
              {
                "id": 7,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 8,
                "name": "eventId",
                "type": "string"
              },
              {
                "id": 9,
                "name": "time",
                "type": "int64"
              }
            ]
          },
          {
            "name": "EventHeader",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GitDetails",
            "fields": [
              {
                "id": 1,
                "name": "sourceRepoType",
                "type": "SourceRepoType"
              },
              {
                "id": 2,
                "name": "event",
                "type": "WebhookEventType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "product/ci/scm/proto/scm.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.webhookpayloads.webhookdata"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "953_events_api"
          }
        ]
      }
    },
    {
      "protopath": "953-git-sync-commons:/:src:/:main:/:proto:/:io:/:harness:/:gitsync:/:change_type.proto",
      "def": {
        "enums": [
          {
            "name": "ChangeType",
            "enum_fields": [
              {
                "name": "ADD"
              },
              {
                "name": "MODIFY",
                "integer": 1
              },
              {
                "name": "DELETE",
                "integer": 2
              },
              {
                "name": "RENAME",
                "integer": 3
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.gitsync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "953-git-sync-commons:/:src:/:main:/:proto:/:io:/:harness:/:gitsync:/:full_sync.proto",
      "def": {
        "messages": [
          {
            "name": "FileChanges",
            "fields": [
              {
                "id": 1,
                "name": "file_changes",
                "type": "FileChange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileChange",
            "fields": [
              {
                "id": 1,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity_detail",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              }
            ]
          },
          {
            "name": "ScopeDetails",
            "fields": [
              {
                "id": 1,
                "name": "entity_scope",
                "type": "io.harness.eventsframework.schemas.entity.EntityScopeInfo"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "log_context",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "FullSyncFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "error_msg",
                "type": "string"
              },
              {
                "id": 3,
                "name": "file_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "FullSyncRequest",
            "fields": [
              {
                "id": 1,
                "name": "file_changes",
                "type": "FullSyncChangeSet",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "log_context",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "FullSyncResponse",
            "fields": [
              {
                "id": 1,
                "name": "file_response",
                "type": "FullSyncFileResponse",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FullSyncChangeSet",
            "fields": [
              {
                "id": 1,
                "name": "entity_detail",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 2,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "folder_path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "yaml_git_config_identifier",
                "type": "string"
              },
              {
                "id": 5,
                "name": "branch_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "account_identifier",
                "type": "string"
              },
              {
                "id": 8,
                "name": "commit_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "FullSyncEventRequest",
            "fields": [
              {
                "id": 1,
                "name": "git_config_scope",
                "type": "io.harness.eventsframework.schemas.entity.EntityScopeInfo"
              },
              {
                "id": 2,
                "name": "createPr",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "target_branch",
                "type": "string"
              },
              {
                "id": 5,
                "name": "isNewBranch",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "baseBranch",
                "type": "string"
              },
              {
                "id": 7,
                "name": "prTitle",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rootFolder",
                "type": "string"
              },
              {
                "id": 9,
                "name": "user_principal",
                "type": "io.harness.security.UserPrincipal"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "FullSyncService",
            "rpcs": [
              {
                "name": "getEntitiesForFullSync",
                "in_type": "ScopeDetails",
                "out_type": "FileChanges"
              },
              {
                "name": "performEntitySync",
                "in_type": "FullSyncRequest",
                "out_type": "FullSyncResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_scope_info.proto"
          },
          {
            "path": "980-commons/src/main/proto/io/harness/security/user_principal.proto"
          }
        ],
        "package": {
          "name": "io.harness.gitsync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "953-git-sync-commons:/:src:/:main:/:proto:/:io:/:harness:/:gitsync:/:git_to_harness.proto",
      "def": {
        "enums": [
          {
            "name": "FileProcessingStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              },
              {
                "name": "SKIPPED",
                "integer": 2
              },
              {
                "name": "UNPROCESSED",
                "integer": 3
              }
            ]
          },
          {
            "name": "ProcessingFailureStage",
            "enum_fields": [
              {
                "name": "RECEIVE_STAGE"
              },
              {
                "name": "SORT_STAGE",
                "integer": 1
              },
              {
                "name": "PROCESS_STAGE",
                "integer": 2
              },
              {
                "name": "POST_PROCESS_STAGE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MarkEntityInvalidRequest",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "branch_info",
                "type": "GitToHarnessInfo"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "entity_info_list",
                "type": "EntityInfos"
              }
            ]
          },
          {
            "name": "EntityInfos",
            "fields": [
              {
                "id": 1,
                "name": "entityInfoList",
                "type": "EntityInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EntityInfo",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity_detail",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 3,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "yaml_git_config_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "last_object_id",
                "type": "google.protobuf.StringValue"
              }
            ]
          },
          {
            "name": "MarkEntityInvalidResponse",
            "fields": [
              {
                "id": 1,
                "name": "entity_infos",
                "type": "EntityInfos"
              }
            ]
          },
          {
            "name": "ChangeSets",
            "fields": [
              {
                "id": 1,
                "name": "change_set",
                "type": "ChangeSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ChangeSet",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "entity_type",
                "type": "io.harness.eventsframework.schemas.entity.EntityTypeProtoEnum"
              },
              {
                "id": 4,
                "name": "object_id",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 5,
                "name": "change_type",
                "type": "io.harness.gitsync.ChangeType"
              },
              {
                "id": 6,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "yaml_git_config_info",
                "type": "YamlGitConfigInfo"
              },
              {
                "id": 8,
                "name": "change_set_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "entityRefForDeletion",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 10,
                "name": "prev_file_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessingResponse",
            "fields": [
              {
                "id": 1,
                "name": "response",
                "type": "FileProcessingResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "processing_failure_stage",
                "type": "ProcessingFailureStage"
              },
              {
                "id": 4,
                "name": "is_error",
                "type": "bool"
              }
            ]
          },
          {
            "name": "FileProcessingResponse",
            "fields": [
              {
                "id": 1,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "FileProcessingStatus"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "google.protobuf.StringValue"
              }
            ]
          },
          {
            "name": "GitToHarnessInfo",
            "fields": [
              {
                "id": 1,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 2,
                "name": "repo_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "GitToHarnessProcessRequest",
            "fields": [
              {
                "id": 1,
                "name": "change_sets",
                "type": "ChangeSets"
              },
              {
                "id": 2,
                "name": "gitToHarnessBranchInfo",
                "type": "GitToHarnessInfo"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "commit_id",
                "type": "google.protobuf.StringValue"
              }
            ]
          },
          {
            "name": "YamlGitConfigInfo",
            "fields": [
              {
                "id": 1,
                "name": "yaml_git_config_org_identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 2,
                "name": "yaml_git_config_project_identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "yaml_git_config_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "account_id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GitToHarnessService",
            "rpcs": [
              {
                "name": "syncRequestFromGit",
                "in_type": "ChangeSet",
                "out_type": "ProcessingResponse"
              },
              {
                "name": "process",
                "in_type": "GitToHarnessProcessRequest",
                "out_type": "ProcessingResponse"
              },
              {
                "name": "markEntitiesInvalid",
                "in_type": "MarkEntityInvalidRequest",
                "out_type": "MarkEntityInvalidResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_type.proto"
          },
          {
            "path": "io/harness/gitsync/change_type.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          }
        ],
        "package": {
          "name": "io.harness.gitsync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "953-git-sync-commons:/:src:/:main:/:proto:/:io:/:harness:/:gitsync:/:harness_to_git.proto",
      "def": {
        "messages": [
          {
            "name": "PushInfo",
            "fields": [
              {
                "id": 1,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "entity_detail",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 4,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "yaml_git_config_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "is_new_branch",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "branch_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "folder_path",
                "type": "string"
              },
              {
                "id": 10,
                "name": "is_sync_from_git",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "context_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PushResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "bool"
              }
            ]
          },
          {
            "name": "FileInfo",
            "fields": [
              {
                "id": 1,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "yaml_git_config_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "entity_detail",
                "type": "io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO"
              },
              {
                "id": 4,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "is_new_branch",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "base_branch",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 8,
                "name": "folder_path",
                "type": "string"
              },
              {
                "id": 9,
                "name": "principal",
                "type": "io.harness.security.Principal"
              },
              {
                "id": 11,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 12,
                "name": "change_type",
                "type": "io.harness.gitsync.ChangeType"
              },
              {
                "id": 13,
                "name": "commit_msg",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 14,
                "name": "old_file_sha",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 15,
                "name": "is_full_sync_flow",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "commit_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "context_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PushFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "is_default",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "defaultBranchName",
                "type": "string"
              },
              {
                "id": 5,
                "name": "error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "scm_response_code",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "commit_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IsGitSyncEnabled",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RepoDetails",
            "fields": [
              {
                "id": 1,
                "name": "yaml_git_config_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "org_identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "project_identifier",
                "type": "google.protobuf.StringValue"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "context_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "BranchDetails",
            "fields": [
              {
                "id": 1,
                "name": "default_branch",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "HarnessToGitPushInfoService",
            "rpcs": [
              {
                "name": "pushFromHarness",
                "in_type": "PushInfo",
                "out_type": "PushResponse"
              },
              {
                "name": "pushFile",
                "in_type": "FileInfo",
                "out_type": "PushFileResponse"
              },
              {
                "name": "isGitSyncEnabledForScope",
                "in_type": "io.harness.eventsframework.schemas.entity.EntityScopeInfo",
                "out_type": "IsGitSyncEnabled"
              },
              {
                "name": "getDefaultBranch",
                "in_type": "RepoDetails",
                "out_type": "BranchDetails"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_scope_info.proto"
          },
          {
            "path": "io/harness/gitsync/change_type.proto"
          },
          {
            "path": "980-commons/src/main/proto/io/harness/security/principal.proto"
          }
        ],
        "package": {
          "name": "io.harness.gitsync"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "955-delegate-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:account.proto",
      "def": {
        "messages": [
          {
            "name": "AccountId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "955_delegate_beans"
          }
        ]
      }
    },
    {
      "protopath": "955-delegate-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:capability.proto",
      "def": {
        "messages": [
          {
            "name": "Capability",
            "fields": [
              {
                "id": 1,
                "name": "kryo_capability",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "955_delegate_beans"
          }
        ]
      }
    },
    {
      "protopath": "955-delegate-beans:/:src:/:main:/:proto:/:io:/:harness:/:delegate:/:delegate.proto",
      "def": {
        "messages": [
          {
            "name": "DelegateId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.delegate"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "955_delegate_beans"
          }
        ]
      }
    },
    {
      "protopath": "955-delegate-beans:/:src:/:main:/:proto:/:io:/:harness:/:perpetualtask:/:perpetual_task.proto",
      "def": {
        "messages": [
          {
            "name": "PerpetualTaskId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PerpetualTaskSchedule",
            "fields": [
              {
                "id": 1,
                "name": "interval",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 2,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "PerpetualTaskExecutionBundle",
            "fields": [
              {
                "id": 1,
                "name": "capabilities",
                "type": "delegate.Capability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "task_params",
                "type": "google.protobuf.Any"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "setup_abstractions",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "955-delegate-beans/src/main/proto/io/harness/delegate/capability.proto"
          }
        ],
        "package": {
          "name": "io.harness.perpetualtask"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "955_delegate_beans"
          }
        ]
      }
    },
    {
      "protopath": "959-timeout-engine:/:src:/:main:/:proto:/:io:/:harness:/:timeout:/:contracts:/:timeouts.proto",
      "def": {
        "messages": [
          {
            "name": "TimeoutObtainment",
            "fields": [
              {
                "id": 1,
                "name": "dimension",
                "type": "Dimension"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Dimension",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.timeout.contracts"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "960-expression-service:/:src:/:main:/:proto:/:io:/:harness:/:expression:/:service:/:expression_service.proto",
      "def": {
        "enums": [
          {
            "name": "ExpressionValue.EvaluationStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "ERROR",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ExpressionRequest",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "ExpressionQuery",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExpressionQuery",
            "fields": [
              {
                "id": 1,
                "name": "jexl",
                "type": "string"
              },
              {
                "id": 2,
                "name": "json_context",
                "type": "string"
              },
              {
                "id": 3,
                "name": "is_skip_condition",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExpressionResponse",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "ExpressionValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExpressionValue",
            "fields": [
              {
                "id": 1,
                "name": "jexl",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "status_code",
                "type": "EvaluationStatus"
              },
              {
                "id": 4,
                "name": "error_message",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ExpressionEvaulatorService",
            "rpcs": [
              {
                "name": "evaluateExpression",
                "in_type": "ExpressionRequest",
                "out_type": "ExpressionResponse"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.expression.service"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "960_expression_service"
          }
        ]
      }
    },
    {
      "protopath": "960-notification-beans:/:src:/:main:/:proto:/:NotificationRequest.proto",
      "def": {
        "enums": [
          {
            "name": "Team",
            "enum_fields": [
              {
                "name": "OTHER"
              },
              {
                "name": "CD",
                "integer": 1
              },
              {
                "name": "CV",
                "integer": 2
              },
              {
                "name": "CI",
                "integer": 3
              },
              {
                "name": "FFM",
                "integer": 4
              },
              {
                "name": "PIPELINE",
                "integer": 5
              },
              {
                "name": "PL",
                "integer": 6
              },
              {
                "name": "GTM",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NotificationRequest",
            "fields": [
              {
                "id": 2,
                "name": "accountId",
                "type": "string"
              },
              {
                "id": 3,
                "name": "team",
                "type": "Team"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "slack",
                "type": "Slack"
              },
              {
                "id": 6,
                "name": "email",
                "type": "Email"
              },
              {
                "id": 7,
                "name": "pagerDuty",
                "type": "PagerDuty"
              },
              {
                "id": 8,
                "name": "msTeam",
                "type": "MSTeam"
              }
            ],
            "messages": [
              {
                "name": "Slack",
                "fields": [
                  {
                    "id": 7,
                    "name": "slackWebHookUrls",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "userGroupIds",
                    "type": "string",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 9,
                    "name": "userGroup",
                    "type": "UserGroup",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "templateId",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "templateData",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Email",
                "fields": [
                  {
                    "id": 7,
                    "name": "emailIds",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "userGroupIds",
                    "type": "string",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 9,
                    "name": "userGroup",
                    "type": "UserGroup",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "templateId",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "templateData",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "PagerDuty",
                "fields": [
                  {
                    "id": 7,
                    "name": "pagerDutyIntegrationKeys",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "userGroupIds",
                    "type": "string",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 9,
                    "name": "userGroup",
                    "type": "UserGroup",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "templateId",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "templateData",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "MSTeam",
                "fields": [
                  {
                    "id": 7,
                    "name": "msTeamKeys",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "userGroupIds",
                    "type": "string",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 9,
                    "name": "userGroup",
                    "type": "UserGroup",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "templateId",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "templateData",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "UserGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "identifier",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "orgIdentifier",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "projectIdentifier",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-api-services-beans:/:src:/:main:/:proto:/:io:/:harness:/:logging:/:unit_progress.proto",
      "def": {
        "enums": [
          {
            "name": "UnitStatus",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SUCCESS",
                "integer": 1
              },
              {
                "name": "FAILURE",
                "integer": 2
              },
              {
                "name": "RUNNING",
                "integer": 3
              },
              {
                "name": "QUEUED",
                "integer": 4
              },
              {
                "name": "SKIPPED",
                "integer": 5
              },
              {
                "name": "EXPIRED",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UnitProgress",
            "fields": [
              {
                "id": 1,
                "name": "unitName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "UnitStatus"
              },
              {
                "id": 3,
                "name": "startTime",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "endTime",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.logging"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:event_publisher.proto",
      "def": {
        "messages": [
          {
            "name": "PublishRequest",
            "fields": [
              {
                "id": 1,
                "name": "messages",
                "type": "PublishMessage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PublishMessage",
            "fields": [
              {
                "id": 1,
                "name": "payload",
                "type": "google.protobuf.Any"
              },
              {
                "id": 3,
                "name": "occurred_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "message_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "category",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "attributes",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PublishResponse"
          }
        ],
        "services": [
          {
            "name": "EventPublisher",
            "rpcs": [
              {
                "name": "Publish",
                "in_type": "PublishRequest",
                "out_type": "PublishResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.event"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:ce_exception_messages.proto",
      "def": {
        "messages": [
          {
            "name": "CeExceptionMessage",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:common_messages.proto",
      "def": {
        "enums": [
          {
            "name": "Lifecycle.EventType",
            "enum_fields": [
              {
                "name": "EVENT_TYPE_INVALID"
              },
              {
                "name": "EVENT_TYPE_START",
                "integer": 1
              },
              {
                "name": "EVENT_TYPE_STOP",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Lifecycle",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "EventType"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "setting_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:ec2_messages.proto",
      "def": {
        "messages": [
          {
            "name": "Ec2InstanceInfo",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instance_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "capacity_reservation_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "spot_instance_request_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "instance_lifecycle",
                "type": "string"
              },
              {
                "id": 6,
                "name": "instance_state",
                "type": "InstanceState"
              },
              {
                "id": 7,
                "name": "cluster_arn",
                "type": "string"
              },
              {
                "id": 8,
                "name": "region",
                "type": "string"
              },
              {
                "id": 9,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "setting_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "InstanceState",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Ec2Lifecycle",
            "fields": [
              {
                "id": 1,
                "name": "lifecycle",
                "type": "Lifecycle"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "io/harness/event/payloads/common_messages.proto"
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:ecs_messages.proto",
      "def": {
        "messages": [
          {
            "name": "EcsTaskInfo",
            "fields": [
              {
                "id": 1,
                "name": "ecs_task_description",
                "type": "EcsTaskDescription"
              },
              {
                "id": 2,
                "name": "ecs_task_resource",
                "type": "ReservedResource"
              }
            ]
          },
          {
            "name": "EcsTaskDescription",
            "fields": [
              {
                "id": 1,
                "name": "task_arn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_arn",
                "type": "string"
              },
              {
                "id": 3,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "container_instance_arn",
                "type": "string"
              },
              {
                "id": 5,
                "name": "launch_type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "desired_status",
                "type": "string"
              },
              {
                "id": 7,
                "name": "region",
                "type": "string"
              },
              {
                "id": 8,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "setting_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "EcsTaskLifecycle",
            "fields": [
              {
                "id": 1,
                "name": "lifecycle",
                "type": "Lifecycle"
              }
            ]
          },
          {
            "name": "ReservedResource",
            "fields": [
              {
                "id": 1,
                "name": "cpu",
                "type": "double"
              },
              {
                "id": 2,
                "name": "memory",
                "type": "double"
              }
            ]
          },
          {
            "name": "EcsContainerInstanceDescription",
            "fields": [
              {
                "id": 1,
                "name": "container_instance_arn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_arn",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ec2_instance_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 5,
                "name": "region",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "setting_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "EcsContainerInstanceInfo",
            "fields": [
              {
                "id": 1,
                "name": "ecs_container_instance_description",
                "type": "EcsContainerInstanceDescription"
              },
              {
                "id": 2,
                "name": "ecs_container_instance_resource",
                "type": "ReservedResource"
              }
            ]
          },
          {
            "name": "EcsContainerInstanceLifecycle",
            "fields": [
              {
                "id": 1,
                "name": "lifecycle",
                "type": "Lifecycle"
              }
            ]
          },
          {
            "name": "EcsUtilization",
            "fields": [
              {
                "id": 1,
                "name": "cluster_arn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "service_arn",
                "type": "string"
              },
              {
                "id": 4,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "metric_values",
                "type": "MetricValue",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "setting_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "MetricValue",
                "fields": [
                  {
                    "id": 1,
                    "name": "metric_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "statistic",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "timestamps",
                    "type": "google.protobuf.Timestamp",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "values",
                    "type": "double",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "EcsSyncEvent",
            "fields": [
              {
                "id": 1,
                "name": "cluster_arn",
                "type": "string"
              },
              {
                "id": 2,
                "name": "active_ec2_instance_arns",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "active_container_instance_arns",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "active_task_arns",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "last_processed_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "setting_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "io/harness/event/payloads/common_messages.proto"
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:k8s_recommender_messages.proto",
      "def": {
        "messages": [
          {
            "name": "HistogramProto",
            "fields": [
              {
                "id": 1,
                "name": "reference_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "total_weight",
                "type": "double"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "bucket_weights",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "ContainerStateProto",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "memory_peak",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "cpu_histogram",
                "type": "HistogramProto"
              },
              {
                "id": 10,
                "name": "first_sample_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "last_sample_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "total_samples_count",
                "type": "int32"
              },
              {
                "id": 13,
                "name": "version",
                "type": "int32"
              },
              {
                "id": 14,
                "name": "memory_peak_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "cpu_histogram_v2",
                "type": "HistogramProto"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:event:/:payloads:/:k8s_utilization_messages.proto",
      "def": {
        "messages": [
          {
            "name": "AggregatedUsage",
            "fields": [
              {
                "id": 1,
                "name": "avg_cpu_nano",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "max_cpu_nano",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "avg_memory_byte",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "max_memory_byte",
                "type": "int64"
              }
            ]
          },
          {
            "name": "AggregatedStorage",
            "fields": [
              {
                "id": 1,
                "name": "avg_capacity_byte",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "avg_used_byte",
                "type": "int64"
              }
            ]
          },
          {
            "name": "NodeMetric",
            "fields": [
              {
                "id": 1,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "window",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 8,
                "name": "aggregated_usage",
                "type": "AggregatedUsage"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "PodMetric",
            "fields": [
              {
                "id": 1,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "window",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 9,
                "name": "aggregated_usage",
                "type": "AggregatedUsage"
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "PVMetric",
            "fields": [
              {
                "id": 1,
                "name": "cloud_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "window",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "kube_system_uid",
                "type": "string"
              },
              {
                "id": 9,
                "name": "aggregated_storage",
                "type": "AggregatedStorage"
              },
              {
                "id": 10,
                "name": "pod_uid",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.event.payloads"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-grpc:/:src:/:main:/:proto:/:io:/:harness:/:pingpong:/:ping_pong_service.proto",
      "def": {
        "messages": [
          {
            "name": "Ping",
            "fields": [
              {
                "id": 1,
                "name": "delegate_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ping_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "Pong"
          }
        ],
        "services": [
          {
            "name": "PingPongService",
            "rpcs": [
              {
                "name": "TryPing",
                "in_type": "Ping",
                "out_type": "Pong"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.event"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:entity_detail.proto",
      "def": {
        "messages": [
          {
            "name": "EntityDetailProtoDTO",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "EntityTypeProtoEnum"
              },
              {
                "id": 2,
                "name": "identifierRef",
                "type": "IdentifierRefProtoDTO"
              },
              {
                "id": 3,
                "name": "inputSetRef",
                "type": "InputSetReferenceProtoDTO"
              },
              {
                "id": 5,
                "name": "templateRef",
                "type": "TemplateReferenceProtoDTO"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_type.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/identifier_ref.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/input_set_ref.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/template_reference.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:entity_scope_info.proto",
      "def": {
        "messages": [
          {
            "name": "EntityScopeInfo",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "org_id",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "project_id",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "identifier",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:entity_type.proto",
      "def": {
        "enums": [
          {
            "name": "EntityTypeProtoEnum",
            "enum_fields": [
              {
                "name": "PROJECTS"
              },
              {
                "name": "PIPELINES",
                "integer": 1
              },
              {
                "name": "CONNECTORS",
                "integer": 2
              },
              {
                "name": "SECRETS",
                "integer": 3
              },
              {
                "name": "SERVICE",
                "integer": 4
              },
              {
                "name": "ENVIRONMENT",
                "integer": 5
              },
              {
                "name": "INPUT_SETS",
                "integer": 6
              },
              {
                "name": "CV_CONFIG",
                "integer": 7
              },
              {
                "name": "DELEGATES",
                "integer": 8
              },
              {
                "name": "DELEGATE_CONFIGURATIONS",
                "integer": 9
              },
              {
                "name": "CV_VERIFICATION_JOB",
                "integer": 10
              },
              {
                "name": "CV_KUBERNETES_ACTIVITY_SOURCE",
                "integer": 11
              },
              {
                "name": "INTEGRATION_STEPS",
                "integer": 12
              },
              {
                "name": "INTEGRATION_STAGE",
                "integer": 13
              },
              {
                "name": "DEPLOYMENT_STAGE",
                "integer": 14
              },
              {
                "name": "DEPLOYMENT_STEPS",
                "integer": 15
              },
              {
                "name": "PIPELINE_STEPS",
                "integer": 16
              },
              {
                "name": "APPROVAL_STAGE",
                "integer": 17
              },
              {
                "name": "TRIGGERS",
                "integer": 18
              },
              {
                "name": "FEATURE_FLAG_STAGE",
                "integer": 19
              },
              {
                "name": "MONITORED_SERVICE",
                "integer": 20
              },
              {
                "name": "TEMPLATE",
                "integer": 21
              },
              {
                "name": "GIT_REPOSITORIES",
                "integer": 22
              },
              {
                "name": "FEATURE_FLAGS",
                "integer": 23
              },
              {
                "name": "HTTP_STEP",
                "integer": 24
              },
              {
                "name": "SHELL_SCRIPT_STEP",
                "integer": 25
              },
              {
                "name": "K8S_CANARY_DEPLOY_STEP",
                "integer": 26
              },
              {
                "name": "JIRA_CREATE_STEP",
                "integer": 27
              },
              {
                "name": "SERVICENOW_APPROVAL_STEP",
                "integer": 28
              },
              {
                "name": "JIRA_UPDATE_STEP",
                "integer": 29
              },
              {
                "name": "JIRA_APPROVAL_STEP",
                "integer": 30
              },
              {
                "name": "HARNESS_APPROVAL_STEP",
                "integer": 31
              },
              {
                "name": "BARRIER_STEP",
                "integer": 32
              },
              {
                "name": "VERIFY_STEP",
                "integer": 33
              },
              {
                "name": "OPAPOLICIES",
                "integer": 34
              },
              {
                "name": "POLICY_STEP",
                "integer": 35
              },
              {
                "name": "ARTIFACTORY_UPLOAD",
                "integer": 36
              },
              {
                "name": "GCS_UPLOAD",
                "integer": 37
              },
              {
                "name": "S3_UPLOAD",
                "integer": 38
              },
              {
                "name": "BUILD_AND_PUSH_GCR",
                "integer": 39
              },
              {
                "name": "BUILD_AND_PUSH_ECR",
                "integer": 40
              },
              {
                "name": "BUILD_AND_PUSH_DOCKER_REGISTRY",
                "integer": 41
              },
              {
                "name": "RUN_STEP",
                "integer": 42
              },
              {
                "name": "RUN_TEST",
                "integer": 43
              },
              {
                "name": "PLUGIN",
                "integer": 44
              },
              {
                "name": "RESTORE_CACHE_GCS",
                "integer": 45
              },
              {
                "name": "RESTORE_CACHE_S3",
                "integer": 46
              },
              {
                "name": "SAVE_CACHE_GCS",
                "integer": 47
              },
              {
                "name": "SAVE_CACHE_S3",
                "integer": 48
              },
              {
                "name": "FLAG_CONFIGURATION",
                "integer": 49
              },
              {
                "name": "SECURITY",
                "integer": 50
              },
              {
                "name": "K8S_APPLY_STEP",
                "integer": 51
              },
              {
                "name": "K8S_BLUE_GREEN_DEPLOY_STEP",
                "integer": 52
              },
              {
                "name": "K8S_ROLLING_DEPLOY_STEP",
                "integer": 53
              },
              {
                "name": "K8S_ROLLING_ROLLBACK_STEP",
                "integer": 54
              },
              {
                "name": "K8S_SCALE_STEP",
                "integer": 55
              },
              {
                "name": "K8S_DELETE_STEP",
                "integer": 56
              },
              {
                "name": "K8S_BG_SWAP_SERVICES_STEP",
                "integer": 57
              },
              {
                "name": "K8S_CANARY_DELETE_STEP",
                "integer": 58
              },
              {
                "name": "TERRAFORM_APPLY_STEP",
                "integer": 59
              },
              {
                "name": "TERRAFORM_PLAN_STEP",
                "integer": 60
              },
              {
                "name": "TERRAFORM_DESTROY_STEP",
                "integer": 61
              },
              {
                "name": "TERRAFORM_ROLLBACK_STEP",
                "integer": 62
              },
              {
                "name": "HELM_DEPLOY_STEP",
                "integer": 63
              },
              {
                "name": "HELM_ROLLBACK_STEP",
                "integer": 64
              },
              {
                "name": "SERVICENOW_CREATE_STEP",
                "integer": 65
              },
              {
                "name": "SERVICENOW_UPDATE_STEP",
                "integer": 66
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:identifier_ref.proto",
      "def": {
        "messages": [
          {
            "name": "IdentifierRefProtoDTO",
            "fields": [
              {
                "id": 1,
                "name": "scope",
                "type": "io.harness.eventsframework.schemas.entity.ScopeProtoEnum"
              },
              {
                "id": 2,
                "name": "identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "accountIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "orgIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 5,
                "name": "projectIdentifier",
                "type": "google.protobuf.StringValue"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/scope.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:input_set_ref.proto",
      "def": {
        "messages": [
          {
            "name": "InputSetReferenceProtoDTO",
            "fields": [
              {
                "id": 1,
                "name": "accountIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 2,
                "name": "orgIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "projectIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "pipelineIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 5,
                "name": "identifier",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:scope.proto",
      "def": {
        "enums": [
          {
            "name": "ScopeProtoEnum",
            "enum_fields": [
              {
                "name": "ACCOUNT"
              },
              {
                "name": "ORG",
                "integer": 1
              },
              {
                "name": "PROJECT",
                "integer": 2
              },
              {
                "name": "UNKNOWN",
                "integer": 3
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "970-ng-commons:/:src:/:main:/:proto:/:io:/:harness:/:eventsframework:/:schemas:/:entity:/:template_reference.proto",
      "def": {
        "messages": [
          {
            "name": "TemplateReferenceProtoDTO",
            "fields": [
              {
                "id": 1,
                "name": "scope",
                "type": "io.harness.eventsframework.schemas.entity.ScopeProtoEnum"
              },
              {
                "id": 2,
                "name": "identifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "accountIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 4,
                "name": "orgIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 5,
                "name": "projectIdentifier",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 6,
                "name": "versionLabel",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/scope.proto"
          }
        ],
        "package": {
          "name": "io.harness.eventsframework.schemas.entity"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "970_ng_commons"
          }
        ]
      }
    },
    {
      "protopath": "980-commons:/:src:/:main:/:proto:/:io:/:harness:/:security:/:principal.proto",
      "def": {
        "messages": [
          {
            "name": "Principal",
            "fields": [
              {
                "id": 1,
                "name": "user_principal",
                "type": "io.harness.security.UserPrincipal"
              },
              {
                "id": 2,
                "name": "service_principal",
                "type": "io.harness.security.ServicePrincipal"
              },
              {
                "id": 3,
                "name": "service_account_principal",
                "type": "io.harness.security.ServiceAccountPrincipal"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "980-commons/src/main/proto/io/harness/security/user_principal.proto"
          },
          {
            "path": "980-commons/src/main/proto/io/harness/security/service_principal.proto"
          },
          {
            "path": "980-commons/src/main/proto/io/harness/security/service_account_principal.proto"
          }
        ],
        "package": {
          "name": "io.harness.security"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "980-commons:/:src:/:main:/:proto:/:io:/:harness:/:security:/:service_account_principal.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceAccountPrincipal",
            "fields": [
              {
                "id": 1,
                "name": "email",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 2,
                "name": "user_name",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "name",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.security"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "980-commons:/:src:/:main:/:proto:/:io:/:harness:/:security:/:service_principal.proto",
      "def": {
        "messages": [
          {
            "name": "ServicePrincipal",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.security"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "980-commons:/:src:/:main:/:proto:/:io:/:harness:/:security:/:user_principal.proto",
      "def": {
        "messages": [
          {
            "name": "UserPrincipal",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 2,
                "name": "email",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 3,
                "name": "user_name",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "io.harness.security"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "980-commons:/:src:/:main:/:proto:/:io:/:harness:/:virtualstack:/:virtual_stack.proto",
      "def": {
        "messages": [
          {
            "name": "VirtualStackRequest",
            "fields": [
              {
                "id": 1,
                "name": "global_context",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "VirtualStackResponse"
          }
        ],
        "package": {
          "name": "io.harness.virtualstack"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "980_commons"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:addon:/:proto:/:addon.proto",
      "def": {
        "messages": [
          {
            "name": "ExecuteStepRequest",
            "fields": [
              {
                "id": 1,
                "name": "step",
                "type": "io.harness.product.ci.engine.proto.UnitStep"
              },
              {
                "id": 2,
                "name": "tmpFilePath",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "prev_step_outputs",
                  "type": "io.harness.product.ci.engine.proto.StepOutput"
                }
              }
            ]
          },
          {
            "name": "ExecuteStepResponse",
            "fields": [
              {
                "id": 2,
                "name": "num_retries",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "artifact",
                "type": "io.harness.product.ci.engine.proto.Artifact"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "output",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SignalStopRequest"
          },
          {
            "name": "SignalStopResponse"
          }
        ],
        "services": [
          {
            "name": "Addon",
            "rpcs": [
              {
                "name": "ExecuteStep",
                "in_type": "ExecuteStepRequest",
                "out_type": "ExecuteStepResponse"
              },
              {
                "name": "SignalStop",
                "in_type": "SignalStopRequest",
                "out_type": "SignalStopResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "product/ci/engine/proto/execution.proto"
          },
          {
            "path": "product/ci/engine/proto/artifact.proto"
          }
        ],
        "package": {
          "name": "io.harness.product.ci.addon.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "ciaddonpb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:engine:/:proto:/:artifact.proto",
      "def": {
        "messages": [
          {
            "name": "Artifact",
            "fields": [
              {
                "id": 1,
                "name": "docker_artifact",
                "type": "DockerArtifactMetadata"
              },
              {
                "id": 2,
                "name": "file_artifact",
                "type": "FileArtifactMetadata"
              }
            ]
          },
          {
            "name": "DockerArtifactMetadata",
            "fields": [
              {
                "id": 1,
                "name": "registry_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "docker_images",
                "type": "DockerImageMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DockerImageMetadata",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "digest",
                "type": "string"
              }
            ]
          },
          {
            "name": "FileArtifactMetadata",
            "fields": [
              {
                "id": 1,
                "name": "file_artifacts",
                "type": "FileArtifact",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileArtifact",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "url",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.product.ci.engine.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "cienginepb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:engine:/:proto:/:execution.proto",
      "def": {
        "enums": [
          {
            "name": "ShellType",
            "enum_fields": [
              {
                "name": "SH"
              },
              {
                "name": "BASH",
                "integer": 1
              }
            ]
          },
          {
            "name": "Report.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "JUNIT",
                "integer": 1
              }
            ]
          },
          {
            "name": "UpdateStateRequest.Action",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PAUSE",
                "integer": 1
              },
              {
                "name": "RESUME",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "StepContext",
            "fields": [
              {
                "id": 1,
                "name": "num_retries",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "execution_timeout_secs",
                "type": "int64"
              }
            ]
          },
          {
            "name": "PublishArtifactsStep",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "UploadFile",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "images",
                "type": "BuildPublishImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Report",
            "fields": [
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RunTestsStep",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string"
              },
              {
                "id": 2,
                "name": "language",
                "type": "string"
              },
              {
                "id": 3,
                "name": "buildTool",
                "type": "string"
              },
              {
                "id": 4,
                "name": "testAnnotations",
                "type": "string"
              },
              {
                "id": 5,
                "name": "packages",
                "type": "string"
              },
              {
                "id": 6,
                "name": "runOnlySelectedTests",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "context",
                "type": "StepContext"
              },
              {
                "id": 8,
                "name": "container_port",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "reports",
                "type": "Report",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "preTestCommand",
                "type": "string"
              },
              {
                "id": 11,
                "name": "postTestCommand",
                "type": "string"
              },
              {
                "id": 12,
                "name": "envVarOutputs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "diff_files",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "environment",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "RunStep",
            "fields": [
              {
                "id": 1,
                "name": "command",
                "type": "string"
              },
              {
                "id": 2,
                "name": "context",
                "type": "StepContext"
              },
              {
                "id": 3,
                "name": "env_var_outputs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "container_port",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "reports",
                "type": "Report",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "shell_type",
                "type": "ShellType"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "environment",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PluginStep",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "context",
                "type": "StepContext"
              },
              {
                "id": 3,
                "name": "container_port",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "artifact_file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "reports",
                "type": "Report",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "env_var_outputs",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "environment",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SaveCacheStep",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RestoreCacheStep",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fail_if_not_exist",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UnitStep",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "run",
                "type": "RunStep"
              },
              {
                "id": 4,
                "name": "save_cache",
                "type": "SaveCacheStep"
              },
              {
                "id": 5,
                "name": "restore_cache",
                "type": "RestoreCacheStep"
              },
              {
                "id": 6,
                "name": "publish_artifacts",
                "type": "PublishArtifactsStep"
              },
              {
                "id": 9,
                "name": "plugin",
                "type": "PluginStep"
              },
              {
                "id": 10,
                "name": "runTests",
                "type": "RunTestsStep"
              },
              {
                "id": 7,
                "name": "callback_token",
                "type": "string"
              },
              {
                "id": 8,
                "name": "task_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "skip_condition",
                "type": "string"
              },
              {
                "id": 12,
                "name": "log_key",
                "type": "string"
              },
              {
                "id": 13,
                "name": "account_id",
                "type": "string"
              },
              {
                "id": 14,
                "name": "container_port",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "ParallelStep",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "steps",
                "type": "UnitStep",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Step",
            "fields": [
              {
                "id": 1,
                "name": "parallel",
                "type": "ParallelStep"
              },
              {
                "id": 2,
                "name": "unit",
                "type": "UnitStep"
              }
            ]
          },
          {
            "name": "Execution",
            "fields": [
              {
                "id": 1,
                "name": "steps",
                "type": "Step",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "account_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpdateStateRequest",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "Action"
              }
            ]
          },
          {
            "name": "UpdateStateResponse"
          },
          {
            "name": "GetImageEntrypointRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetImageEntrypointResponse",
            "fields": [
              {
                "id": 1,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "args",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StepOutput",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "output",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "EvaluateJEXLRequest",
            "fields": [
              {
                "id": 1,
                "name": "step_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "expressions",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "step_outputs",
                  "type": "StepOutput"
                }
              }
            ]
          },
          {
            "name": "EvaluateJEXLResponse",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "evaluated_expressions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PingRequest"
          },
          {
            "name": "PingResponse"
          },
          {
            "name": "ExecuteStepRequest",
            "fields": [
              {
                "id": 1,
                "name": "execution_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "step",
                "type": "UnitStep"
              },
              {
                "id": 3,
                "name": "tmp_file_path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "delegate_svc_endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExecuteStepResponse"
          }
        ],
        "services": [
          {
            "name": "LiteEngine",
            "rpcs": [
              {
                "name": "UpdateState",
                "in_type": "UpdateStateRequest",
                "out_type": "UpdateStateResponse"
              },
              {
                "name": "GetImageEntrypoint",
                "in_type": "GetImageEntrypointRequest",
                "out_type": "GetImageEntrypointResponse"
              },
              {
                "name": "EvaluateJEXL",
                "in_type": "EvaluateJEXLRequest",
                "out_type": "EvaluateJEXLResponse"
              },
              {
                "name": "Ping",
                "in_type": "PingRequest",
                "out_type": "PingResponse"
              },
              {
                "name": "ExecuteStep",
                "in_type": "ExecuteStepRequest",
                "out_type": "ExecuteStepResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "product/ci/engine/proto/publish_artifact.proto"
          }
        ],
        "package": {
          "name": "io.harness.product.ci.engine.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "cienginepb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:engine:/:proto:/:logproxy.proto",
      "def": {
        "messages": [
          {
            "name": "WriteRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lines",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WriteResponse"
          },
          {
            "name": "OpenRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              }
            ]
          },
          {
            "name": "OpenResponse"
          },
          {
            "name": "UploadRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lines",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UploadResponse"
          },
          {
            "name": "CloseRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              }
            ]
          },
          {
            "name": "CloseResponse"
          },
          {
            "name": "UploadLinkRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              }
            ]
          },
          {
            "name": "UploadLinkResponse",
            "fields": [
              {
                "id": 1,
                "name": "link",
                "type": "string"
              }
            ]
          },
          {
            "name": "UploadUsingLinkRequest",
            "fields": [
              {
                "id": 1,
                "name": "link",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lines",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UploadUsingLinkResponse"
          }
        ],
        "services": [
          {
            "name": "LogProxy",
            "rpcs": [
              {
                "name": "Write",
                "in_type": "WriteRequest",
                "out_type": "WriteResponse"
              },
              {
                "name": "Open",
                "in_type": "OpenRequest",
                "out_type": "OpenResponse"
              },
              {
                "name": "UploadLink",
                "in_type": "UploadLinkRequest",
                "out_type": "UploadLinkResponse"
              },
              {
                "name": "UploadUsingLink",
                "in_type": "UploadUsingLinkRequest",
                "out_type": "UploadUsingLinkResponse",
                "in_streamed": true
              },
              {
                "name": "Close",
                "in_type": "CloseRequest",
                "out_type": "CloseResponse"
              },
              {
                "name": "Upload",
                "in_type": "UploadRequest",
                "out_type": "UploadResponse",
                "in_streamed": true
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.product.ci.engine.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "cienginepb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:engine:/:proto:/:publish_artifact.proto",
      "def": {
        "enums": [
          {
            "name": "LocationType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "S3",
                "integer": 1
              },
              {
                "name": "GCS",
                "integer": 2
              },
              {
                "name": "JFROG",
                "integer": 3
              },
              {
                "name": "GCR",
                "integer": 4
              },
              {
                "name": "ECR",
                "integer": 5
              },
              {
                "name": "DOCKERHUB",
                "integer": 6
              }
            ]
          },
          {
            "name": "AuthType",
            "enum_fields": [
              {
                "name": "BASIC_AUTH"
              },
              {
                "name": "SECRET_FILE",
                "integer": 1
              },
              {
                "name": "ACCESS_KEY",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TaskId",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "Connector",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "auth",
                "type": "AuthType"
              }
            ]
          },
          {
            "name": "BuildPublishImage",
            "fields": [
              {
                "id": 1,
                "name": "docker_file",
                "type": "string"
              },
              {
                "id": 2,
                "name": "context",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "Destination"
              }
            ]
          },
          {
            "name": "UploadFile",
            "fields": [
              {
                "id": 1,
                "name": "file_pattern",
                "type": "string"
              },
              {
                "id": 2,
                "name": "destination",
                "type": "Destination"
              }
            ]
          },
          {
            "name": "Destination",
            "fields": [
              {
                "id": 1,
                "name": "destination_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "connector",
                "type": "Connector"
              },
              {
                "id": 3,
                "name": "location_type",
                "type": "LocationType"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.product.ci.engine.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "cienginepb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:engine:/:proto:/:tiproxy.proto",
      "def": {
        "messages": [
          {
            "name": "UploadCgRequest",
            "fields": [
              {
                "id": 1,
                "name": "step_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "repo",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sha",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source",
                "type": "string"
              },
              {
                "id": 5,
                "name": "data_dir",
                "type": "string"
              },
              {
                "id": 6,
                "name": "target",
                "type": "string"
              },
              {
                "id": 7,
                "name": "time_ms",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UploadCgResponse"
          },
          {
            "name": "WriteTestsRequest",
            "fields": [
              {
                "id": 1,
                "name": "step_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "tests",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "repo",
                "type": "string"
              },
              {
                "id": 4,
                "name": "sha",
                "type": "string"
              },
              {
                "id": 5,
                "name": "commit_link",
                "type": "string"
              }
            ]
          },
          {
            "name": "WriteTestsResponse"
          },
          {
            "name": "SelectTestsRequest",
            "fields": [
              {
                "id": 1,
                "name": "step_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "repo",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sha",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source_branch",
                "type": "string"
              },
              {
                "id": 5,
                "name": "target_branch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "body",
                "type": "string"
              }
            ]
          },
          {
            "name": "SelectTestsResponse",
            "fields": [
              {
                "id": 1,
                "name": "selected",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TiProxy",
            "rpcs": [
              {
                "name": "WriteTests",
                "in_type": "WriteTestsRequest",
                "out_type": "WriteTestsResponse",
                "in_streamed": true
              },
              {
                "name": "SelectTests",
                "in_type": "SelectTestsRequest",
                "out_type": "SelectTestsResponse"
              },
              {
                "name": "UploadCg",
                "in_type": "UploadCgRequest",
                "out_type": "UploadCgResponse"
              }
            ]
          }
        ],
        "package": {
          "name": "io.harness.product.ci.engine.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "cienginepb"
          }
        ]
      }
    },
    {
      "protopath": "product:/:ci:/:scm:/:proto:/:scm.proto",
      "def": {
        "enums": [
          {
            "name": "GitProvider",
            "enum_fields": [
              {
                "name": "BITBUCKET"
              },
              {
                "name": "GITEA",
                "integer": 1
              },
              {
                "name": "GITHUB",
                "integer": 2
              },
              {
                "name": "GITLAB",
                "integer": 3
              },
              {
                "name": "GOGS",
                "integer": 4
              },
              {
                "name": "STASH",
                "integer": 5
              },
              {
                "name": "CODECOMMIT",
                "integer": 6
              }
            ]
          },
          {
            "name": "Action",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "DELETE",
                "integer": 3
              },
              {
                "name": "OPEN",
                "integer": 4
              },
              {
                "name": "REOPEN",
                "integer": 5
              },
              {
                "name": "CLOSE",
                "integer": 6
              },
              {
                "name": "LABEL",
                "integer": 7
              },
              {
                "name": "UNLABEL",
                "integer": 8
              },
              {
                "name": "SYNC",
                "integer": 9
              },
              {
                "name": "MERGE",
                "integer": 10
              }
            ]
          },
          {
            "name": "ContentType",
            "enum_fields": [
              {
                "name": "UNKNOWN_CONTENT"
              },
              {
                "name": "FILE",
                "integer": 1
              },
              {
                "name": "DIRECTORY",
                "integer": 2
              },
              {
                "name": "SYMLINK",
                "integer": 3
              },
              {
                "name": "GITLINK",
                "integer": 4
              }
            ]
          },
          {
            "name": "GithubWebhookEvent",
            "enum_fields": [
              {
                "name": "GITHUB_CREATE"
              },
              {
                "name": "GITHUB_DELETE",
                "integer": 1
              },
              {
                "name": "GITHUB_DEPLOYMENT",
                "integer": 2
              },
              {
                "name": "GITHUB_ISSUE",
                "integer": 3
              },
              {
                "name": "GITHUB_ISSUE_COMMENT",
                "integer": 4
              },
              {
                "name": "GITHUB_PULL_REQUEST",
                "integer": 5
              },
              {
                "name": "GITHUB_PULL_REQUEST_REVIEW",
                "integer": 6
              },
              {
                "name": "GITHUB_PUSH",
                "integer": 7
              }
            ]
          },
          {
            "name": "GitlabWebhookEvent",
            "enum_fields": [
              {
                "name": "GITLAB_COMMENT"
              },
              {
                "name": "GITLAB_ISSUES",
                "integer": 1
              },
              {
                "name": "GITLAB_MERGE",
                "integer": 2
              },
              {
                "name": "GITLAB_PUSH",
                "integer": 3
              },
              {
                "name": "GITLAB_TAG",
                "integer": 4
              }
            ]
          },
          {
            "name": "BitbucketCloudWebhookEvent",
            "enum_fields": [
              {
                "name": "BITBUCKET_CLOUD_ISSUE"
              },
              {
                "name": "BITBUCKET_CLOUD_ISSUE_COMMENT",
                "integer": 1
              },
              {
                "name": "BITBUCKET_CLOUD_PULL_REQUEST",
                "integer": 2
              },
              {
                "name": "BITBUCKET_CLOUD_PULL_REQUEST_COMMENT",
                "integer": 3
              },
              {
                "name": "BITBUCKET_CLOUD_PUSH",
                "integer": 4
              }
            ]
          },
          {
            "name": "BitbucketServerWebhookEvent",
            "enum_fields": [
              {
                "name": "BITBUCKET_SERVER_BRANCH_PUSH_TAG"
              },
              {
                "name": "BITBUCKET_SERVER_PR",
                "integer": 1
              },
              {
                "name": "BITBUCKET_SERVER_PR_COMMENT",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "User",
            "fields": [
              {
                "id": 1,
                "name": "login",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "email",
                "type": "string"
              },
              {
                "id": 4,
                "name": "avatar",
                "type": "string"
              },
              {
                "id": 5,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Reference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sha",
                "type": "string"
              }
            ]
          },
          {
            "name": "Perm",
            "fields": [
              {
                "id": 1,
                "name": "pull",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "push",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "admin",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Repository",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "perm",
                "type": "Perm"
              },
              {
                "id": 5,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "private",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "clone",
                "type": "string"
              },
              {
                "id": 8,
                "name": "clone_ssh",
                "type": "string"
              },
              {
                "id": 9,
                "name": "link",
                "type": "string"
              },
              {
                "id": 10,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Signature",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "email",
                "type": "string"
              },
              {
                "id": 3,
                "name": "date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "login",
                "type": "string"
              },
              {
                "id": 5,
                "name": "avatar",
                "type": "string"
              }
            ]
          },
          {
            "name": "Commit",
            "fields": [
              {
                "id": 1,
                "name": "sha",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "author",
                "type": "Signature"
              },
              {
                "id": 4,
                "name": "committer",
                "type": "Signature"
              },
              {
                "id": 5,
                "name": "link",
                "type": "string"
              }
            ]
          },
          {
            "name": "Label",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "color",
                "type": "string"
              }
            ]
          },
          {
            "name": "PullRequest",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "body",
                "type": "string"
              },
              {
                "id": 4,
                "name": "sha",
                "type": "string"
              },
              {
                "id": 5,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 6,
                "name": "source",
                "type": "string"
              },
              {
                "id": 7,
                "name": "target",
                "type": "string"
              },
              {
                "id": 8,
                "name": "fork",
                "type": "string"
              },
              {
                "id": 9,
                "name": "link",
                "type": "string"
              },
              {
                "id": 10,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "merged",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "base",
                "type": "Reference"
              },
              {
                "id": 13,
                "name": "head",
                "type": "Reference"
              },
              {
                "id": 14,
                "name": "author",
                "type": "User"
              },
              {
                "id": 15,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "labels",
                "type": "Label",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "commits",
                "type": "Commit",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PullRequestHook",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 2,
                "name": "repo",
                "type": "Repository"
              },
              {
                "id": 3,
                "name": "pr",
                "type": "PullRequest"
              },
              {
                "id": 4,
                "name": "sender",
                "type": "User"
              }
            ]
          },
          {
            "name": "IssueCommentHook",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 2,
                "name": "repo",
                "type": "Repository"
              },
              {
                "id": 3,
                "name": "issue",
                "type": "Issue"
              },
              {
                "id": 4,
                "name": "sender",
                "type": "User"
              },
              {
                "id": 5,
                "name": "comment",
                "type": "Comment"
              }
            ]
          },
          {
            "name": "BranchHook",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 2,
                "name": "repo",
                "type": "Repository"
              },
              {
                "id": 3,
                "name": "sender",
                "type": "User"
              },
              {
                "id": 4,
                "name": "ref",
                "type": "Reference"
              }
            ]
          },
          {
            "name": "Comment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "body",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "User"
              },
              {
                "id": 4,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Issue",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "body",
                "type": "string"
              },
              {
                "id": 4,
                "name": "link",
                "type": "string"
              },
              {
                "id": 5,
                "name": "labels",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "user",
                "type": "User"
              },
              {
                "id": 9,
                "name": "pr",
                "type": "PullRequest"
              },
              {
                "id": 10,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "updated",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PushHook",
            "fields": [
              {
                "id": 1,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 2,
                "name": "base_ref",
                "type": "string"
              },
              {
                "id": 3,
                "name": "repo",
                "type": "Repository"
              },
              {
                "id": 4,
                "name": "before",
                "type": "string"
              },
              {
                "id": 5,
                "name": "after",
                "type": "string"
              },
              {
                "id": 6,
                "name": "commit",
                "type": "Commit"
              },
              {
                "id": 7,
                "name": "sender",
                "type": "User"
              },
              {
                "id": 8,
                "name": "commits",
                "type": "Commit",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Header",
            "fields": [
              {
                "id": 1,
                "name": "fields",
                "type": "Pair",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Pair",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ParseWebhookRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "body",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret",
                "type": "string"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "GitProvider"
              }
            ]
          },
          {
            "name": "ParseWebhookResponse",
            "fields": [
              {
                "id": 1,
                "name": "pr",
                "type": "PullRequestHook"
              },
              {
                "id": 2,
                "name": "push",
                "type": "PushHook"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "IssueCommentHook"
              },
              {
                "id": 4,
                "name": "branch",
                "type": "BranchHook"
              }
            ]
          },
          {
            "name": "GithubApp",
            "fields": [
              {
                "id": 1,
                "name": "app_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "private_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "GithubProvider",
            "fields": [
              {
                "id": 1,
                "name": "access_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "github_app",
                "type": "GithubApp"
              }
            ]
          },
          {
            "name": "GitlabProvider",
            "fields": [
              {
                "id": 1,
                "name": "access_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "personal_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "GiteaProvider",
            "fields": [
              {
                "id": 1,
                "name": "access_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "BitbucketCloudProvider",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "app_password",
                "type": "string"
              }
            ]
          },
          {
            "name": "BitbucketServerProvider",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "personal_access_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "CodecommitProvider",
            "fields": [
              {
                "id": 1,
                "name": "access_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "secret_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Provider",
            "fields": [
              {
                "id": 1,
                "name": "github",
                "type": "GithubProvider"
              },
              {
                "id": 2,
                "name": "gitlab",
                "type": "GitlabProvider"
              },
              {
                "id": 3,
                "name": "gitea",
                "type": "GiteaProvider"
              },
              {
                "id": 4,
                "name": "bitbucket_cloud",
                "type": "BitbucketCloudProvider"
              },
              {
                "id": 5,
                "name": "bitbucket_server",
                "type": "BitbucketServerProvider"
              },
              {
                "id": 6,
                "name": "codecommit",
                "type": "CodecommitProvider"
              },
              {
                "id": 7,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 8,
                "name": "skipVerify",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "debug",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "additional_certs_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "PageResponse",
            "fields": [
              {
                "id": 1,
                "name": "next",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "next_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "PageRequest",
            "fields": [
              {
                "id": 1,
                "name": "page",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "GetBatchFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "findRequest",
                "type": "GetFileRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLatestFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "DeleteFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "blob_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "signature",
                "type": "Signature"
              },
              {
                "id": 8,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "DeleteFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "blob_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreateFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "blob_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpdateFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "blob_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "FileModifyRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "content",
                "type": "string"
              },
              {
                "id": 5,
                "name": "message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "blob_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "signature",
                "type": "Signature"
              },
              {
                "id": 9,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "FileContent",
            "fields": [
              {
                "id": 1,
                "name": "content",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "blob_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "FileBatchContentResponse",
            "fields": [
              {
                "id": 1,
                "name": "file_contents",
                "type": "FileContent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FindFilesInBranchRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 3,
                "name": "path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "FindFilesInBranchResponse",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileChange",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "FindFilesInCommitRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 3,
                "name": "path",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "FindFilesInCommitResponse",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileChange",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "FileChange",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "content_type",
                "type": "ContentType"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "blob_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IsLatestFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 5,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "blob_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "IsLatestFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "latest",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CreatePRRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "body",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source",
                "type": "string"
              },
              {
                "id": 5,
                "name": "target",
                "type": "string"
              },
              {
                "id": 6,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "CreatePRResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "FindFilesInPRRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "PRFile",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "added",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "renamed",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "deleted",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "prev_file_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "FindFilesInPRResponse",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "PRFile",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "CreateBranchRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "CreateBranchResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLatestCommitRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "GetLatestCommitResponse",
            "fields": [
              {
                "id": 1,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "error",
                "type": "string"
              },
              {
                "id": 4,
                "name": "commit",
                "type": "Commit"
              }
            ]
          },
          {
            "name": "ListBranchesRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "ListBranchesResponse",
            "fields": [
              {
                "id": 1,
                "name": "branches",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              },
              {
                "id": 3,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "CompareCommitsRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "target",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "CompareCommitsResponse",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "PRFile",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "ListCommitsRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "Provider"
              },
              {
                "id": 6,
                "name": "filePath",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListCommitsResponse",
            "fields": [
              {
                "id": 1,
                "name": "commit_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "GetLatestCommitOnFileRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "branch",
                "type": "string"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              },
              {
                "id": 4,
                "name": "filePath",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLatestCommitOnFileResponse",
            "fields": [
              {
                "id": 1,
                "name": "commit_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListCommitsInPRRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "ListCommitsInPRResponse",
            "fields": [
              {
                "id": 1,
                "name": "commits",
                "type": "Commit",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "GithubWebhookEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "GithubWebhookEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GitlabWebhookEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "GitlabWebhookEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BitbucketCloudWebhookEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "BitbucketCloudWebhookEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BitbucketServerWebhookEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "BitbucketServerWebhookEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NativeEvents",
            "fields": [
              {
                "id": 1,
                "name": "github",
                "type": "GithubWebhookEvents"
              },
              {
                "id": 2,
                "name": "gitlab",
                "type": "GitlabWebhookEvents"
              },
              {
                "id": 3,
                "name": "bitbucket_cloud",
                "type": "BitbucketCloudWebhookEvents"
              },
              {
                "id": 4,
                "name": "bitbucket_server",
                "type": "BitbucketServerWebhookEvents"
              }
            ]
          },
          {
            "name": "CreateWebhookRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "target",
                "type": "string"
              },
              {
                "id": 4,
                "name": "secret",
                "type": "string"
              },
              {
                "id": 5,
                "name": "nativeEvents",
                "type": "NativeEvents"
              },
              {
                "id": 6,
                "name": "skipVerify",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "WebhookResponse",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "target",
                "type": "string"
              },
              {
                "id": 4,
                "name": "nativeEvents",
                "type": "NativeEvents"
              },
              {
                "id": 5,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "skipVerify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CreateWebhookResponse",
            "fields": [
              {
                "id": 1,
                "name": "webhook",
                "type": "WebhookResponse"
              },
              {
                "id": 2,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteWebhookRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "DeleteWebhookResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListWebhooksRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "ListWebhooksResponse",
            "fields": [
              {
                "id": 1,
                "name": "webhooks",
                "type": "WebhookResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "error",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "PageResponse"
              }
            ]
          },
          {
            "name": "GetAuthenticatedUserRequest",
            "fields": [
              {
                "id": 1,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "GetAuthenticatedUserResponse",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUserReposRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "PageRequest"
              },
              {
                "id": 2,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "GetUserReposResponse",
            "fields": [
              {
                "id": 1,
                "name": "repos",
                "type": "Repository",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "PageResponse"
              },
              {
                "id": 3,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "FindPRRequest",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "FindCommitRequest",
            "fields": [
              {
                "id": 1,
                "name": "slug",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ref",
                "type": "string"
              },
              {
                "id": 3,
                "name": "provider",
                "type": "Provider"
              }
            ]
          },
          {
            "name": "FindPRResponse",
            "fields": [
              {
                "id": 1,
                "name": "pr",
                "type": "PullRequest"
              },
              {
                "id": 2,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "FindCommitResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "commit",
                "type": "Commit"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SCM",
            "rpcs": [
              {
                "name": "ParseWebhook",
                "in_type": "ParseWebhookRequest",
                "out_type": "ParseWebhookResponse"
              },
              {
                "name": "GetFile",
                "in_type": "GetFileRequest",
                "out_type": "FileContent"
              },
              {
                "name": "GetBatchFile",
                "in_type": "GetBatchFileRequest",
                "out_type": "FileBatchContentResponse"
              },
              {
                "name": "GetLatestFile",
                "in_type": "GetLatestFileRequest",
                "out_type": "FileContent"
              },
              {
                "name": "IsLatestFile",
                "in_type": "IsLatestFileRequest",
                "out_type": "IsLatestFileResponse"
              },
              {
                "name": "FindFilesInBranch",
                "in_type": "FindFilesInBranchRequest",
                "out_type": "FindFilesInBranchResponse"
              },
              {
                "name": "FindFilesInCommit",
                "in_type": "FindFilesInCommitRequest",
                "out_type": "FindFilesInCommitResponse"
              },
              {
                "name": "PushFile",
                "in_type": "FileModifyRequest",
                "out_type": "FileContent"
              },
              {
                "name": "CreateFile",
                "in_type": "FileModifyRequest",
                "out_type": "CreateFileResponse"
              },
              {
                "name": "DeleteFile",
                "in_type": "DeleteFileRequest",
                "out_type": "DeleteFileResponse"
              },
              {
                "name": "UpdateFile",
                "in_type": "FileModifyRequest",
                "out_type": "UpdateFileResponse"
              },
              {
                "name": "CreatePR",
                "in_type": "CreatePRRequest",
                "out_type": "CreatePRResponse"
              },
              {
                "name": "FindPR",
                "in_type": "FindPRRequest",
                "out_type": "FindPRResponse"
              },
              {
                "name": "FindCommit",
                "in_type": "FindCommitRequest",
                "out_type": "FindCommitResponse"
              },
              {
                "name": "FindFilesInPR",
                "in_type": "FindFilesInPRRequest",
                "out_type": "FindFilesInPRResponse"
              },
              {
                "name": "CreateBranch",
                "in_type": "CreateBranchRequest",
                "out_type": "CreateBranchResponse"
              },
              {
                "name": "GetLatestCommit",
                "in_type": "GetLatestCommitRequest",
                "out_type": "GetLatestCommitResponse"
              },
              {
                "name": "ListBranches",
                "in_type": "ListBranchesRequest",
                "out_type": "ListBranchesResponse"
              },
              {
                "name": "ListCommits",
                "in_type": "ListCommitsRequest",
                "out_type": "ListCommitsResponse"
              },
              {
                "name": "CompareCommits",
                "in_type": "CompareCommitsRequest",
                "out_type": "CompareCommitsResponse"
              },
              {
                "name": "GetLatestCommitOnFile",
                "in_type": "GetLatestCommitOnFileRequest",
                "out_type": "GetLatestCommitOnFileResponse"
              },
              {
                "name": "ListCommitsInPR",
                "in_type": "ListCommitsInPRRequest",
                "out_type": "ListCommitsInPRResponse"
              },
              {
                "name": "GetAuthenticatedUser",
                "in_type": "GetAuthenticatedUserRequest",
                "out_type": "GetAuthenticatedUserResponse"
              },
              {
                "name": "GetUserRepos",
                "in_type": "GetUserReposRequest",
                "out_type": "GetUserReposResponse"
              },
              {
                "name": "CreateWebhook",
                "in_type": "CreateWebhookRequest",
                "out_type": "CreateWebhookResponse"
              },
              {
                "name": "DeleteWebhook",
                "in_type": "DeleteWebhookRequest",
                "out_type": "DeleteWebhookResponse"
              },
              {
                "name": "ListWebhooks",
                "in_type": "ListWebhooksRequest",
                "out_type": "ListWebhooksResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "io.harness.product.ci.scm.proto"
        },
        "options": [
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "ciscmpb"
          }
        ]
      }
    }
  ]
}